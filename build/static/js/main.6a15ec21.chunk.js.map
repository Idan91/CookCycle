{"version":3,"sources":["images/google_G.svg","pages/HomePage.js","util/firebase.js","util/axios.js","util/fetch.js","contexts/AuthContext.js","pages/Page.js","pages/SignInPage.js","contexts/UserContext.js","components/PrivateRoute.js","components/recipes/RecipeCard.js","pages/RecipeDetails.js","contexts/RecipesContext.js","components/recipes/IngredientButton.js","components/Autocomplete.js","components/recipes/IngredientSearch.js","util/uiUtils.js","pages/RecipesPage.js","pages/AccountPage.js","components/AuthRoute.js","pages/UserPage.js","pages/Error404Page.js","contexts/AppContext.js","components/Navbar.js","components/Footer.js","CookCycle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","Fragment","className","icon","faUtensils","faHeart","faShareSquare","to","activeClassName","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","axios","defaults","baseURL","Axios","cookcycleApiCall","methodType","apiCommand","a","requestBody","url","Promise","resolve","reject","method","toLowerCase","data","then","response","status","catch","err","console","error","AuthContext","React","createContext","AuthContextProvider","props","useState","isSignedIn","setIsSignedIn","firebaseIdToken","setFirebaseIdToken","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","user","signInWith","provider","signInWithPopup","result","token","credential","accessToken","updateLocalStorageUserData","userCredentials","email","displayName","providerData","post","username","errorMessage","message","window","alert","localStorage","setItem","JSON","stringify","Provider","value","facebookSignIn","facebookProvider","FacebookAuthProvider","useDeviceLanguage","googleSignIn","googleProvider","GoogleAuthProvider","signOut","validateSignIn","loggedIn","getItem","children","Page","title","withRouter","useContext","alt","onClick","faFacebookF","src","googleIcon","UserContext","UserContextProvider","userData","setUserData","loading","setLoading","recipesUpdated","setRecipesUpdated","savedRecipes","setSavedRecipes","name","length","active","profileFields","setProfileFields","userRecipes","forEach","recipeId","push","numOfMissingIngredients","recipe","recipeCount","currentProfileFields","field","newValue","newField","updateSavedRecipeField","selectProfileField","event","target","classList","includes","parentNode","selectedField","getAttribute","updatedProfileFields","map","PrivateRoute","Component","component","rest","authenticated","render","RecipeCard","saved","setSaved","toggleSaveRecipe","RecipesContext","cardTitleRef","useRef","getTotalTime","parsedCookTime","parseInt","cookTime","split","parsedPrepTime","prepTime","isNaN","recipeid","faHeartSolid","img_url","ref","page","faBalanceScale","difficulty","trim","faStopwatch","RecipeDetails","match","setRecipe","params","id","currentRecipe","fetchRecipe","saveStatus","i","setRecipeSaveState","author","details","label","detailListItems","detail","index","key","innerWidth","drawRecipeDetials","ingredientsListItems","ingredientsInRecipe","ingredient","string","drawIngredients","instructionLines","instructions","line","period","displayRecipeInstructions","ReciepsContextProvider","state","ingredientSearchInput","ingredientSuggestions","selectedIngredients","autocompleteResultLimit","recipeSearchResults","cursor","recipeFocusVisible","selectedRecipe","searchInitialized","recipeRoutes","addIngredient","setState","searchRecipes","removeIngredient","ingredientToRemove","newIngredients","filter","ingredientSearch","inputString","ingredients","require","suggestions","sortIngredientsInputFirst","input","first","others","indexOf","sort","concat","handleInputChange","populateSuggestions","ingredientCount","suggestion","selected","selectSuggestion","onMouseOver","add","onMouseLeave","remove","handleKeyDown","keyCode","preventDefault","prevState","Math","min","keyboardPressSuggestionSelection","mouseClickSuggestionSelection","onRecipeSelection","addRecipeToFavorites","userEmail","requestData","context","removeRecipeFromFavorites","log","drawSearchedRecipes","recipeList","recipes","isSaved","saveMethod","setRecipeRoutes","addRecipeRoutesToArray","path","clearSearchResults","this","handleInputFocus","contextType","IngredientButton","faTimes","Autocomplete","IngredientSearch","htmlFor","type","placeholder","autoComplete","onChange","onKeyDown","faSearch","loader","RecipesPage","drawSelectedIngredients","Account","i_accountFields","fromCurrentUser","accountFieldToRender","renderAccountFields","confirm","AuthRoute","mainUserRoute","AppContext","UserPage","photoURL","profileBar","fireEvent","evObj","document","createEvent","initEvent","setTimeout","dispathEvent","width","profileFieldElements","Object","keys","populateProfileFields","activeField","content","savedRecipesContent","renderProfileContent","Error404Page","AppContextProvider","homePages","SignInPage","userPages","AccountPage","navbarTypes","createRouteFromPageName","pageName","replace","populateRoutes","routes","addRoutesToArray","pages","routePath","exact","renderRouterSwitch","route","Navbar","appContext","burger","onBurgerClick","querySelector","toggle","navbar","drawNavbar","Footer","CookCycle","navbarType","App","basename","Boolean","location","hostname","navigator","serviceWorker","ready","registration","unregister","ReactDOM","StrictMode","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,s8iCC8E5BC,EArEE,WACf,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,kBACb,6BACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,qBAAd,2BACA,6BACA,wBAAIA,UAAU,8BAAd,qEAMN,yBAAKA,UAAU,yBACb,6BACA,6BACA,yBAAKA,UAAU,mCACb,wBAAIA,UAAU,2BAAd,uCAGA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAiBC,KAAMC,IAAYF,UAAU,qBAC7C,uBAAGA,UAAU,oBAAb,+BAEF,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAiBC,KAAME,IAASH,UAAU,qBAC1C,uBAAGA,UAAU,oBAAb,wBAEF,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CACEC,KAAMG,IACNJ,UAAU,qBAEZ,uBAAGA,UAAU,oBAAb,4BAGJ,6BACA,yBAAKA,UAAU,sBACb,6DAIN,yBAAKA,UAAU,4BACb,6BACA,6BACA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,8BAAd,sBACqB,0BAAMA,UAAU,kBAAhB,QADrB,SAGA,6BACA,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEK,GAAG,WACHL,UAAU,oDACVM,gBAAgB,sBAEhB,4C,gCCrDDC,G,MAAMC,gBAVI,CACrBC,OAAQC,0CACRC,WAAYD,kCACZE,YAAaF,yCACbG,UAAWH,kBACXI,cAAeJ,8BACfK,kBAAmBL,eACnBM,MAAON,+C,iBCXTO,IAAMC,SAASC,QACb,8DAEK,IAEQC,EAFMH,I,wBCHfE,EAAUT,2CAEHW,EAAgB,uCAAG,WAC9BC,EACAC,GAF8B,6BAAAC,EAAA,6DAG9BC,EAH8B,+BAGhB,GAERC,EALwB,UAKfP,GALe,OAKLI,GALK,SASjB,IAAII,SAAQ,SAACC,EAASC,GACjC,IACET,EAAM,CACJU,OAAQR,EAAWS,cACnBL,MACAM,KAAMP,IAELQ,MAAK,SAACC,GAEDA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC9CP,EAAQ,CAAEI,KAAME,EAASF,KAAMG,OAAQD,EAASC,SACnB,MAApBD,EAASC,OAOlBN,EAAO,mBACsB,MAApBK,EAASC,QASlBN,EAAO,oBAGVO,OAAM,SAACC,GAONR,EAAOQ,MAEX,MAAOA,GACPC,QAAQC,MAAMF,GACdR,EAAOQ,OAnDmB,mFAAH,wDCEhBG,EAAcC,IAAMC,gBAqIlBC,EAnIa,SAACC,GAAW,IAAD,EACDC,oBAAS,GADR,mBAC9BC,EAD8B,KAClBC,EADkB,OAESF,mBAAS,MAFlB,mBAE9BG,EAF8B,KAEbC,EAFa,OAGCJ,mBAAS,MAHV,mBAG9BK,EAH8B,KAGjBC,EAHiB,KAKrCC,qBAAU,WACR7C,EAAI8C,OAAOC,oBAAmB,SAACC,GAC7BJ,EAAeI,GACfR,IAAgBQ,SAIpB,IAuBMC,EAAa,SAACC,GAClBlD,EACG8C,OACAK,gBAAgBD,GAChBxB,MAAK,SAAC0B,GAEL,IAAIC,EAAK,iBAAaD,EAAOE,WAAWC,aACxCb,EAAmBW,GAEnB,IAAIL,EAAOI,EAAOJ,KAClBJ,EAAeI,GACfQ,EAA2BR,EAAMK,GAEjC,IAAMI,EAAkB,CACtBC,MAAOV,EAAKU,MACZC,YAAaX,EAAKW,YAClBC,aAAcZ,EAAKY,eAGrB/C,EAAMgD,KAAK,iBAAkBJ,GAC1B/B,MAAK,SAACC,OAGNE,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAGd2B,EAAgBC,QAKlB5C,EAAiB,OAAQ,WAJL,CAClBgD,SAAUL,EAAgBC,QAIzBhC,MAAK,SAACC,GACDA,EAASF,QAGdI,OAAM,SAACC,GACNC,QAAQC,MAAMF,SAIrBD,OAAM,SAAUG,GAEfD,QAAQC,MAAMA,GAEd,IAAI+B,EAAe/B,EAAMgC,QAOzBC,OAAOC,MAAMH,OAsBbP,EAA6B,SAACR,EAAMK,GACxCc,aAAaC,QAAQ,cAAeC,KAAKC,UAAUtB,IACnDmB,aAAaC,QAAQ,kBAAmBf,IAG1C,OACE,kBAACpB,EAAYsC,SAAb,CACEC,MAAO,CACLjC,aACAkC,eAjGiB,WACrB,IAAIC,EAAmB,IAAIzE,IAAS6C,KAAK6B,qBAGzC,OAFA3E,EAAI8C,OAAO8B,oBAEJ3B,EAAWyB,IA8FdG,aA3Fe,WACnB,IAAIC,EAAiB,IAAI7E,IAAS6C,KAAKiC,mBAEvC,OAAO9B,EAAW6B,IAyFdnC,cACAqC,QA7BU,WACdhF,EACG8C,OACAkC,UACAtD,MAAK,WAEJgB,EAAmB,MACnBE,EAAe,MACfY,EAA2B,KAAM,SAGlC3B,OAAM,SAAUG,GAEfD,QAAQC,MAAMA,OAiBdiD,eA/GiB,WACrB,IAAMC,EACJvC,GACAwB,aAAagB,QAAQ,gBACrB1C,GACA0B,aAAagB,QAAQ,mBAEvB,OAAoB,OAAbD,GAAkC,SAAbA,KA2GzB7C,EAAM+C,W,yBC/GEC,EArBF,SAAChD,GACZ,OACE,kBAAC,IAAM7C,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,sBACZ4C,EAAMiD,OACL,kBAAC,IAAM9F,SAAP,KACE,6BACA,4BAAK6C,EAAMiD,QAGf,6BACCjD,EAAM+C,cC6BJG,eApCI,WAAO,IAAD,EACkBC,qBAAWvD,GAA5CwC,EADe,EACfA,eAAgBI,EADD,EACCA,aAwBxB,OACE,kBAAC,EAAD,KACE,yBAAKpF,UAAU,mBACb,yBAAKA,UAAU,GAAGgG,IAAI,eAExB,6BAzBA,kBAAC,IAAMjG,SAAP,KACE,4BACEC,UAAU,oCACViG,QAASjB,GAET,kBAAC,IAAD,CAAiB/E,KAAMiG,IAAalG,UAAU,kBAJhD,+BAOA,6BACA,4BACEA,UAAU,kCACViG,QAASb,GAET,yBAAKe,IAAKC,IAAYJ,IAAI,GAAGhG,UAAU,gBAJzC,kCCjBKqG,EAAc5D,IAAMC,gBA2IlB4D,EAzIa,SAAC1D,GAAW,IAAD,EACDmD,qBAAWvD,GAAvCM,EAD6B,EAC7BA,WAAYI,EADiB,EACjBA,YADiB,EAELL,mBAAS,MAFJ,mBAE9B0D,EAF8B,KAEpBC,EAFoB,OAGP3D,oBAAS,GAHF,mBAG9B4D,EAH8B,KAGrBC,EAHqB,OAKO7D,oBAAS,GALhB,mBAK9B8D,EAL8B,KAKdC,EALc,OAMG/D,mBAAS,IANZ,mBAM9BgE,EAN8B,KAMhBC,EANgB,OAQKjE,mBAAS,CACjD,CACEkE,KAAM,gBACNhC,MAAO8B,EAAaG,OACpBC,QAAQ,KAZyB,mBAQ9BC,EAR8B,KAQfC,EARe,KAyHrC,OArFA/D,qBAAU,WAyBR,GAFAsD,GAAW,GAEPxD,GAAeJ,EACjB,IACEzB,EAAiB,OAAQ,8BAA+B,CACtDgD,SAAUnB,EAAYe,QAErBhC,MAAK,SAACC,GACL,GAAIA,EAASF,KAAM,CACjB,IAAIoF,EAAc,GAElBlF,EAASF,KAAKqF,SAAQ,SAAC1D,GACrBtC,EAAiB,MAAD,yBAA0BsC,EAAO2D,WAC9CrF,MAAK,SAACC,GACLkF,EAAYG,KAAK,CACfD,SAAU3D,EAAO2D,SACjBE,wBAAyB,EACzBC,OAAQvF,EAASF,UAGpBI,OAAM,SAACC,GACNC,QAAQC,MAAMF,SAIpByE,EAAgBM,GA/CK,SAACM,GAC9B,IAAIC,EAAuB,GAE3BT,EAAcG,SAAQ,SAACO,GACrB,IAAIC,EAAWD,EAAM7C,MAEF,kBAAf6C,EAAMb,OACRc,EAAWH,GAGb,IAAII,EAAW,CACbf,KAAMa,EAAMb,KACZhC,MAAO8C,EACPZ,OAAQW,EAAMX,QAGhBU,EAAqBJ,KAAKO,MAG5BX,EAAiBQ,GA6BTI,CAAuB7F,EAASF,KAAKgF,QACrCJ,GAAkB,GAClBF,GAAW,OAGdtE,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdqE,GAAW,MAEf,MAAOrE,GACPC,QAAQC,MAAMF,MAGjB,CAACa,EAAaJ,EAAY6D,IAE7BvD,qBAAU,WACJN,GAAcI,IACXqD,GACHnF,EAAMgD,KAAK,aAAc,CAAEH,MAAOf,EAAYe,QAC3ChC,MAAK,SAACC,GACDA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC9CqE,EAAYtE,EAASF,MAErBM,QAAQC,MAAR,gBACWL,EAASC,OADpB,2BAMHC,OAAM,SAACC,GACNC,QAAQC,MAAMF,SAIrB,CAACS,EAAYI,EAAaqD,IAG3B,kBAACF,EAAYvB,SAAb,CACEC,MAAO,CACLwB,WACAW,gBACAc,mBA9GqB,SAACC,GAG1B,IAHqC,IAC/BC,EAAWD,EAAXC,QAEEA,EAAOC,UAAUpD,MAAMqD,SAAS,mBACtCF,EAASA,EAAOG,WAElB,IAAMC,EAAgBJ,EAAOK,aAAa,QAEpCC,EAAuBtB,EAAcuB,KAAI,SAACb,GAM9C,OALIA,EAAMb,OAASuB,EACjBV,EAAMX,QAAS,EAEfW,EAAMX,QAAS,EAEVW,KAGTT,EAAiBqB,IA8Fb3B,eACAJ,UACAG,sBAGDhE,EAAM+C,W,QCxHE+C,EAfM,SAAC,GAAsD,IAAzCC,EAAwC,EAAnDC,UAAwCC,GAAW,EAA7BC,cAA6B,8CAGnErD,GAAWD,EAFUO,qBAAWvD,GAA9BgD,kBAIR,OACE,kBAAC,IAAD,iBACMqD,EADN,CAEEE,OAAQ,SAACnG,GAAD,OACL6C,EAAwC,kBAACkD,EAAc/F,GAA5C,kBAAC,IAAD,CAAUvC,GAAG,kB,QCgFlB2I,EAjFI,SAACpG,GAAW,IAAD,EACFC,mBAASD,EAAMqG,OADb,mBACrBA,EADqB,KACdC,EADc,KAEpBC,EAAqBpD,qBAAWqD,GAAhCD,iBAEAjG,EAAgB6C,qBAAWvD,GAA3BU,YACFmG,EAAeC,iBAAO,MAE5BlG,qBAAU,WACR8F,EAAStG,EAAMqG,SACd,CAACrG,EAAMqG,QATkB,MAW0BrG,EAAM6E,OAApDA,EAXoB,EAWpBA,OAAQH,EAXY,EAWZA,SAAUE,EAXE,EAWFA,wBAEpB+B,EAAe,WACnB,IAAMC,EAAiBC,SAAShC,EAAOiC,SAASC,MAAM,KAAK,IACrDC,EAAiBH,SAAShC,EAAOoC,SAASF,MAAM,KAAK,IAK3D,OAHiBG,MAAMN,GAAkB,EAAIA,IAC5BM,MAAMF,GAAkB,EAAIA,IAK/C,OACE,yBAAK5J,UAAU,8BAA8B+J,SAAUzC,GACrD,yBACEtH,UAAU,cACViG,QAAS,kBAAMkD,EAAiB7B,EAAUpE,EAAa+F,EAAOC,KAE9D,kBAAC,IAAD,CACElJ,UAAU,mBACVC,KAAMgJ,EAAQe,IAAe7J,OAGjC,yBAAKH,UAAU,uBACb,kBAAC,IAAD,CAAMK,GAAE,kBAAaiH,IACnB,yBAAKnB,IAAKsB,EAAOwC,QAASjE,IAAI,GAAGhG,UAAU,oBAC3C,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,uBACb,yBAAKkK,IAAKb,EAAcrJ,UAAU,qBAChC,2BAAIyH,EAAOV,QAEXnE,EAAMuH,KAAKpI,cAAcqG,SAAS,SAClC,kBAAC,IAAMrI,SAAP,KACE,uBAAGC,UAAU,sDACVwH,EADH,yBAG+B,IAA5BA,GAAiC,MAIxC,yBAAKxH,UAAU,6BACb,uBAAGA,UAAU,6CACX,kBAAC,IAAD,CACEA,UAAU,sBACVC,KAAMmK,MACL,IAJL,OAMG3C,EAAO4C,WAAWC,QAErB,uBAAGtK,UAAU,6CACX,kBAAC,IAAD,CACEA,UAAU,sBACVC,KAAMsK,MACL,IAJL,OAMGhB,IAAiB,EAChB,8BAAOA,IAAP,YAEA,6CC2GLiB,EAnLO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACftB,EAAqBpD,qBAAWqD,GAAhCD,iBACAjG,EAAgB6C,qBAAWvD,GAA3BU,YAF2B,EAIPL,mBAAS,MAJF,mBAI5B4E,EAJ4B,KAIpBiD,EAJoB,OAKT7H,mBAAS,MALA,mBAK5BoG,EAL4B,KAKrBC,EALqB,KAOnC9F,qBAAU,YACS,uCAAG,sBAAA5B,EAAA,sDAClBH,EAAiB,MAAD,yBAA0BoJ,EAAME,OAAOC,KACpD3I,MAAK,SAACC,GACL,IAAM2I,EAAgB3I,EAASF,KAC/B0I,EAAUG,MAEXzI,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAPA,2CAAH,qDAWjByI,KACC,CAACL,EAAME,OAAOC,KAEjBxH,qBAAU,YACgB,uCAAG,sBAAA5B,EAAA,sDACrB0B,GACF7B,EAAiB,OAAQ,8BAA+B,CACtDgD,SAAUnB,EAAYe,QAErBhC,MAAK,SAACC,GACL,GAAIA,EAASF,KAAM,CAEjB,IADA,IAAI+I,GAAa,EACRC,EAAI,EAAGA,EAAI9I,EAASF,KAAKgF,OAAQgE,IACxC,GAAI9I,EAASF,KAAKgJ,GAAG1D,WAAamC,SAASgB,EAAME,OAAOC,IAAK,CAC3DG,GAAa,EACb,MAGJ7B,EAAS6B,OAGZ3I,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAlBK,2CAAH,qDAuBxB4I,KACC,CAACxD,EAAQvE,EAAauH,EAAME,OAAOC,KAsFtC,OACE,kBAAC,EAAD,KACGnD,GACC,oCACa,OAAVwB,GACC,yBACEjJ,UAAU,gCACViG,QAAS,kBACPkD,EAAiB1B,EAAOmD,GAAI1H,EAAa+F,EAAOC,KAGlD,kBAAC,IAAD,CACElJ,UAAU,mBACVC,KAAMgJ,EAAQe,IAAe7J,OAInC,yBAAKH,UAAU,0BACb,4BAAKyH,EAAOV,MACXU,EAAOyD,QACN,wBAAIlL,UAAU,iBAAd,gBAA4CyH,EAAOyD,QAErD,yBACE/E,IAAKsB,EAAOwC,QACZjK,UAAU,mBACVgG,IAAKyB,EAAOV,OAEd,6BACA,yBAAK/G,UAAU,wBApGC,WACxB,IAAMmL,EAAU,CACd,CACEpE,KAAM,WACNqE,MAAO,YAET,CACErE,KAAM,WACNqE,MAAO,aAET,CACErE,KAAM,WACNqE,MAAO,aAET,CACErE,KAAM,aACNqE,MAAO,eAIPC,EAAkB,GA0BtB,OAxBAF,EAAQ9D,SAAQ,SAACiE,EAAQC,GACvB,GAAI9D,EAAO6D,EAAOvE,OAAwC,KAA/BU,EAAO6D,EAAOvE,MAAMuD,OAAe,CAAC,IACvDc,EAAUE,EAAVF,MACFrG,EAAQuG,EAAOvG,OAAS0C,EAAO6D,EAAOvE,MAEtB,aAAhBuE,EAAOvE,KACTsE,EAAgB9D,KAAK,wBAAIiE,IAAKJ,GAAQrG,IAEtCsG,EAAgB9D,KACd,wBAAIiE,IAAKJ,GACNA,EADH,UACiBrG,IAIjBwG,EAAQJ,EAAQnE,OAAS,IACvBxC,OAAOiH,WAAa,IACtBJ,EAAgB9D,KAAK,wBAAIiE,IAAKD,GAAT,MAErBF,EAAgB9D,KAAK,wBAAIiE,IAAKD,UAM/B,4BAAKF,GAsDmCK,IACvC,6BACA,2CACA,yBAAK1L,UAAU,kCAnHD,WACtB,IAAI2L,EAAuB,GAM3B,OAJAlE,EAAOmE,oBAAoBvE,SAAQ,SAACwE,EAAYN,GAC9CI,EAAqBpE,KAAK,wBAAIiE,IAAKD,GAAQM,EAAWC,YAItD,wBAAI9L,UAAU,gCAAgC2L,GA4GrCI,IAEH,6BACA,4CACA,yBAAK/L,UAAU,kCA3DS,WAChC,IAAMgM,EAAmBvE,EAAO3F,OAAO6H,MAAM,MACzCsC,EAAe,GAkBnB,OAhBAD,EAAiB3E,SAAQ,SAAC6E,EAAMX,GAC9B,GAAoB,KAAhBW,EAAK5B,QAAiC,MAAhB4B,EAAK5B,OAAgB,CAC7C,IAAI6B,EAAS,IAETZ,IAAUS,EAAiBhF,OAAS,IACtCmF,EAAS,IAGXF,EAAa1E,KACX,wBAAIiE,IAAKD,GACP,qCAAOW,EAAK5B,QAAZ,OAAqB6B,UAMtB,wBAAInM,UAAU,uBAAuBiM,GAwCjCG,QC5KFhD,EAAiB3G,IAAMC,gBAE9B2J,E,4MACJC,MAAQ,CACNC,sBAAuB,GACvBC,sBAAuB,GACvBC,oBAAqB,GACrBC,wBAAyB,EACzBC,oBAAqB,GACrBC,QAAS,EACTC,oBAAoB,EACpBC,eAAgB,GAChBrG,SAAS,EACTsG,mBAAmB,EACnBC,aAAc,I,EAKhBC,cAAgB,SAACpB,GAAgB,IACzBY,EAAwB,EAAKH,MAA7BG,oBAENA,EAAoBlF,KAAKsE,GAEzB,EAAKqB,SAAS,CACZT,yB,EAIJU,cAAgB,WAAO,IACbV,EAAwB,EAAKH,MAA7BG,oBAER,EAAKS,SAAS,CACZP,oBAAqB,GACrBlG,SAAS,EACTsG,mBAAmB,IAGrB1L,EAAiB,OAAQ,6BAA8BoL,GACpDxK,MAAK,SAACC,GACDA,EAASF,MACX,EAAKkL,SAAS,CACZP,oBAAqBzK,EAASF,KAC9ByE,SAAS,OAIdrE,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACd,EAAK6K,SAAS,CACZzG,SAAS,Q,EAKjB2G,iBAAmB,SAACnF,GAAW,IACrBwE,EAAwB,EAAKH,MAA7BG,oBAEFY,EAAqBpF,EAAMC,OAAOnB,KAElCuG,EAAiBb,EAAoBc,QAAO,SAAC1B,GACjD,OAAOA,IAAewB,KAGxB,EAAKH,SAAS,CACZT,oBAAqBa,K,EAIzBE,iBAAmB,SAACC,GAClB,GAAIA,EAAYzG,OAAS,EAAG,CAC1B,IAAM0G,EAAcC,EAAQ,IAE5BF,EAAcA,EAAY1L,cAE1B,IAAI6L,EAAcF,EAAYH,QAAO,SAAC1B,GACpC,OAAOA,EAAW9E,KAAKqB,SAASqF,MAKP,KAF3BG,EAAc,EAAKC,0BAA0BJ,EAAaG,IAE1C5G,OACd,EAAKkG,SAAS,CACZV,sBAAuB,KAGzB,EAAKU,SAAS,CACZV,sBAAuBoB,M,EAM/BC,0BAA4B,SAACC,EAAO9L,GAGlC,IAFA,IAAI+L,EAAQ,GACRC,EAAS,GACJhD,EAAI,EAAGA,EAAIhJ,EAAKgF,OAAQgE,IACK,IAAhChJ,EAAKgJ,GAAGjE,KAAKkH,QAAQH,GACvBC,EAAMxG,KAAKvF,EAAKgJ,IAEhBgD,EAAOzG,KAAKvF,EAAKgJ,IAKrB,OAFA+C,EAAMG,OACNF,EAAOE,OACAH,EAAMI,OAAOH,I,EAGtBI,kBAAoB,SAACnG,GAAW,IACtBlD,EAAUkD,EAAMC,OAAhBnD,MAER,EAAKmI,SAAS,CACZX,sBAAuBxH,EACvB6H,QAAS,IAGG,KAAV7H,EACF,EAAKmI,SAAS,CACZV,sBAAuB,KAGzB,EAAKgB,iBAAiBzI,I,EAI1BsJ,oBAAsB,WAAO,IAAD,EACqC,EAAK/B,MAA5DE,EADkB,EAClBA,sBAAuBI,EADL,EACKA,OAAQH,EADb,EACaA,oBAEnCmB,EAAc,GAEdU,EAAkB,EAwCtB,OAvCA9B,EAAsBnF,SAAQ,SAACkH,EAAYhD,GACzC,GAAI+C,EAAkB,EAAKhC,MAAMI,wBAAyB,CAExD,IADA,IAAI8B,GAAW,EACNxD,EAAI,EAAGA,EAAIyB,EAAoBzF,OAAQgE,IAC9C,GAAIyB,EAAoBzB,KAAOuD,EAAWxH,KAAM,CAC9CyH,GAAW,EACX,MAICA,IACHZ,EAAYrG,KACV,wBACEvH,UAAS,qBACP4M,IAAWrB,EAAQ,mBAAqB,IAE1CC,IAAKD,EACLxG,MAAOwJ,EAAWxH,KAClBd,QAAS,EAAKwI,iBACdC,YAAa,SAACzG,GACZA,EAAMC,OAAOC,UAAUwG,IAAI,oBACvB/B,GAAU,GACZ,EAAKM,SAAS,CACZN,QAAS,KAIfgC,aAAc,SAAC3G,GACbA,EAAMC,OAAOC,UAAU0G,OAAO,sBAG/BN,EAAWxH,OAGhBuH,SAKCV,G,EAGTkB,cAAgB,SAAC7G,GAAW,IAAD,EACiB,EAAKqE,MAAvCM,EADiB,EACjBA,OAAQJ,EADS,EACTA,sBACRuC,EAAY9G,EAAZ8G,QAER,OAAQA,GACN,KAAK,GACH9G,EAAM+G,iBAEFpC,EAAS,GACX,EAAKM,UAAS,SAAC+B,GAAD,MAAgB,CAC5BrC,OAAQqC,EAAUrC,OAAS,MAG/B,MAEF,KAAK,GAOCA,EAJFsC,KAAKC,IACH,EAAK7C,MAAMI,wBACXF,EAAsBxF,QACpB,GAEJ,EAAKkG,UAAS,SAAC+B,GAAD,MAAgB,CAC5BrC,OAAQqC,EAAUrC,OAAS,MAG/B,MAEF,KAAK,GAGL,KAAK,EAECJ,EAAsBxF,OAAS,IACjCiB,EAAM+G,iBACU,IAAZD,IAA6B,IAAZnC,EACnB,EAAKM,UAAS,SAAC+B,GAAD,MAAgB,CAC5BrC,OAAQqC,EAAUrC,OAAS,MAG7B,EAAK6B,iBAAiBxG,M,EAWhCwG,iBAAmB,SAACxG,GACI,KAAlBA,EAAM8G,SAAoC,IAAlB9G,EAAM8G,QAChC,EAAKK,mCAEL,EAAKC,8BAA8BpH,GAGrC,EAAKiF,UAAS,SAAC+B,GAAD,MAAgB,CAC5BrC,QAAS,EACTL,sBAAuB,GACvBC,sBAAuB,Q,EAI3B4C,iCAAmC,WAAO,IAEpCb,EADI3B,EAAW,EAAKN,MAAhBM,OAGR,IACE2B,EAAa,EAAKjC,MAAME,sBAAsBI,GAE9C,EAAKK,cAAcsB,EAAWxH,MAC9B,MAAO1E,GACPC,QAAQC,MAAMF,K,EAIlBgN,8BAAgC,SAACpH,GAC/B,IAAM4D,EAAa5D,EAAMC,OAAOK,aAAa,SAE7C,IACE,EAAK0E,cAAcpB,GACnB,MAAOxJ,GACPC,QAAQC,MAAMF,K,EAIlBiN,kBAAoB,SAACrH,GAAW,IACxBC,EAAWD,EAAXC,OAEN,IACE,MACGA,EAAOC,UAAUpD,MAAMqD,SAAS,iBACN,gBAA3BF,EAAOC,UAAUpD,OAEjBmD,EAASA,EAAOG,WAElB,MAAOhG,GACPC,QAAQC,MAAMF,K,EAIlBkN,qB,uCAAuB,WAAOjI,EAAUkI,GAAjB,eAAAhO,EAAA,6DACfiO,EAAc,CAAEpL,SAAUmL,EAAWlI,SAAUA,GADhC,kBAGd,IAAI3F,SAAQ,SAACC,EAASC,GAC3B,IACER,EAAiB,OAAQ,eAAgBoO,GACtCxN,MAAK,SAAC0B,GACL,EAAK+L,QAAQ9I,mBAAkB,GAC/BhF,EAAQ+B,MAETvB,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdR,EAAO,uCAEX,MAAOQ,GACPR,EAAO,yCAfU,2C,0DAoBvB8N,0B,uCAA4B,WAAOrI,EAAUkI,GAAjB,eAAAhO,EAAA,6DACpBiO,EAAc,CAAElM,KAAMiM,EAAWlI,SAAUA,GADvB,kBAGnB,IAAI3F,SAAQ,SAACC,EAASC,GAC3B,IACER,EAAiB,OAAQ,kBAAmBoO,GACzCxN,MAAK,SAAC0B,GACLrB,QAAQsN,IAAIjM,GACZ,EAAK+L,QAAQ9I,mBAAkB,GAC/BhF,EAAQ+B,MAETvB,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdR,EAAO,2CAEX,MAAOQ,GACPC,QAAQC,MAAMF,GACdR,EAAO,6CAjBe,2C,0DAsB5BgO,oBAAsB,SAACC,GAA2B,IAAf3F,EAAc,uDAAP,GAChCtD,EAAiB,EAAK6I,QAAtB7I,aAEFkJ,EAAUD,EAAWrH,KAAI,SAAChB,EAAQ8D,GACtC,IAAIyE,GAAU,EAQd,OANAnJ,EAAaQ,SAAQ,SAAC4B,GAChBA,EAAM3B,WAAaG,EAAOH,WAC5B0I,GAAU,MAKZ,kBAAC,EAAD,CAAYxE,IAAKD,EAAO9D,OAAQA,EAAQwB,MAAO+G,EAAS7F,KAAMA,OAIlE,OAAI4F,EAAQ/I,OAAS,EACZ+I,EAEH,EAAKzD,MAAMS,kBACN,uBAAG/M,UAAU,kBAAb,yBADT,G,EAMJmJ,iB,uCAAmB,WAAO7B,EAAUpE,EAAa8M,EAASC,GAAvC,SAAAzO,EAAA,yDACZwO,EADY,uBAEfC,GAAW,GAFI,SAIT,EAAKV,qBAAqBjI,EAAUpE,EAAYe,OACnDhC,MAAK,SAACC,GACLI,QAAQsN,IAAI1N,GAGVA,EAASC,QAAU,KACnBD,EAASC,OAAS,KAClBD,EAASF,KAAK4I,KAIdqF,GAAW,GACXzL,OAAOC,MAAM,wCAGhBrC,OAAM,SAACC,GACNmC,OAAOC,MAAM,oCACbnC,QAAQC,MAAMF,MArBH,oCAwBf4N,GAAW,GAxBI,SA0BT,EAAKN,0BAA0BrI,EAAUpE,EAAYe,OACxDhC,MAAK,SAACC,GACLI,QAAQsN,IAAI1N,GAERA,EAASC,QAAU,KAAOD,EAASC,OAAS,MAG9C8N,GAAW,GACXzL,OAAOC,MAAM,0CAGhBrC,OAAM,SAACC,GACNmC,OAAOC,MAAM,sCACbnC,QAAQC,MAAMF,MAvCH,2C,8DA4CnB6N,gBAAkB,WAAO,IACfrJ,EAAiB,EAAK6I,QAAtB7I,aACA8F,EAAwB,EAAKL,MAA7BK,oBAEJK,EAAe,GAEbmD,EAAyB,SAACL,GAC9BA,EAAWzI,SAAQ,SAACI,GAClBuF,EAAazF,KACX,kBAAC,EAAD,CACEiE,IAAK/D,EAAOA,OAAOV,KACnBqJ,KAAI,oBACJxH,UAAW,kBAAC,EAAD,CAAenB,OAAQA,WAM1C0I,EAAuBtJ,GACvBsJ,EAAuBxD,GAEvB,EAAKO,SAAS,CACZF,kB,EAIJqD,mBAAqB,WACnB,EAAKnD,SAAS,CACZP,oBAAqB,GACrBI,mBAAmB,K,uDAKrB,OACE,kBAAC3D,EAAetE,SAAhB,CACEC,MAAK,eACAuL,KAAKhE,MADL,CAEH+B,oBAAqBiC,KAAKjC,oBAC1BwB,oBAAqBS,KAAKT,oBAC1B5C,cAAeqD,KAAKrD,cACpBG,iBAAkBkD,KAAKlD,iBACvBgB,kBAAmBkC,KAAKlC,kBACxBmC,iBAAkBD,KAAKC,iBACvBzB,cAAewB,KAAKxB,cACpBL,iBAAkB6B,KAAK7B,iBACvBtB,cAAemD,KAAKnD,cACpBoC,qBAAsBe,KAAKf,qBAC3BI,0BAA2BW,KAAKX,0BAChCxG,iBAAkBmH,KAAKnH,iBACvB+G,gBAAiBI,KAAKJ,gBACtBG,mBAAoBC,KAAKD,sBAG1BC,KAAK1N,MAAM+C,c,GAzbiBgD,aAA/B0D,EAeGmE,YAAcnK,EAgbRgG,QCpbAoE,EAfU,SAAC7N,GAAW,IAC3BwK,EAAqBrH,qBAAWqD,GAAhCgE,iBAER,OACE,4BACEpN,UAAU,aACV+G,KAAMnE,EAAMiJ,WACZ5F,QAASmH,GAERxK,EAAMiJ,WALT,SAME,kBAAC,IAAD,CAAiB5L,KAAMyQ,IAAS1Q,UAAU,mBCWjC2Q,EAvBM,WAAO,IAAD,EAKrB5K,qBAAWqD,GAHbiF,EAFuB,EAEvBA,oBACA7B,EAHuB,EAGvBA,sBACAE,EAJuB,EAIvBA,wBAGF,OACE,yBAAK1M,UAAU,gBACb,yBAAKA,UAAU,eACb,4BACGqO,IACA7B,EAAsBxF,OAAS0F,GAC9B,wBAAI1M,UAAU,gBAAd,2CCiBG4Q,EA3BU,WAAO,IAAD,EAMzB7K,qBAAWqD,GAJbmD,EAF2B,EAE3BA,sBACAC,EAH2B,EAG3BA,sBACA4B,EAJ2B,EAI3BA,kBACAU,EAL2B,EAK3BA,cAGF,OACE,yBAAK9O,UAAU,cACb,2BAAOA,UAAU,eAAe6Q,QAAQ,qBACtC,2BACEC,KAAK,OACLlG,GAAG,oBACHmG,YAAY,wBACZC,aAAa,MACbjM,MAAOwH,EACP0E,SAAU7C,EACV8C,UAAWpC,IAEb,kBAAC,IAAD,CAAiB9O,UAAU,cAAcC,KAAMkR,OAEhD3E,EAAsBxF,OAAS,GAAK,kBAAC,EAAD,QC1B9BoK,EACX,yBAAKxG,GAAG,aACN,yBAAKA,GAAG,YC2EGyG,EAtEK,WAAO,IAAD,EAQpBtL,qBAAWqD,GANbqD,EAFsB,EAEtBA,oBACAU,EAHsB,EAGtBA,cACA0C,EAJsB,EAItBA,oBACAlD,EALsB,EAKtBA,oBACAlG,EANsB,EAMtBA,QACA4J,EAPsB,EAOtBA,mBAiBF,OACE,kBAAC,IAAMtQ,SAAP,KACE,kBAAC,EAAD,KACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,kBAAd,eACA,kBAAC,EAAD,MACCyM,EAAoBzF,OAAS,GAC5B,4BAAQhH,UAAU,wBAAwBiG,QAASkH,GAAnD,uBAEE,kBAAC,IAAD,CAAiBlN,KAAMkR,OAG3B,6BA3BsB,WAC9B,IAAIzD,EAAc,GAUlB,OARAjB,EAAoBpF,SAAQ,SAACwE,EAAYN,GACvCmC,EAAYnG,KACV,wBAAIiE,IAAKD,GACP,kBAAC,EAAD,CAAkBM,WAAYA,SAK7B,wBAAI7L,UAAU,wBAAwB0N,GAiBpC4D,KAGL,yBAAKtR,UAAU,qBACb,yBAAKA,UAAU,kBACZyG,EACC2K,EAEA,oCACGzE,EAAoB3F,OAAS,GAC5B,kBAAC,IAAMjH,SAAP,KAEE,6BACA,4BACEC,UAAU,wBACViG,QAASoK,GAFX,iBAMA,8BAGHR,EAAoBlD,EAAqB,qBCK3C4E,EArEC,WAAO,IAAD,EACaxL,qBAAWvD,GAApC+C,EADY,EACZA,QAASrC,EADG,EACHA,YA0DjB,OACE,kBAAC,EAAD,CAAM2C,MAAM,WACT3C,GA/CuB,SAC1BsO,GAGI,IAFJC,EAEG,wDADH3D,EACG,wDACC4D,EAAuB,GACvB3M,EAAQ,GA4BZ,OA1BAyM,EAAgBnK,SAAQ,SAACO,GAErB7C,EADE0M,EAEA,wBAAIzR,UAAU,uBAAuBkD,EAAY0E,EAAMb,OAEhD+G,EAEP,2BACEgD,KAAK,OAEL/J,KAAMa,EAAMb,OAIR,wBAAI/G,UAAU,uBAAuB4H,EAAMb,MAGrD2K,EAAqBnK,KACnB,yBAAKvH,UAAU,gBAAgBwL,IAAK5D,EAAMb,MACxC,wBAAI/G,UAAU,wBAAwB4H,EAAMwD,OAC3CrG,EACD,kCAKC2M,EAaWC,CA1DE,CACpB,CACE5K,KAAM,cACNqE,MAAO,gBAET,CACErE,KAAM,QACNqE,MAAO,WAmD4C,GACnD,4BAAQpL,UAAU,mBAAmBiG,QAXd,SAACgC,GACXzD,OAAOoN,QAAQ,uCAG5BrM,MAOA,cC9CSsM,EAhBG,SAAC,GAAsD,IAAzClJ,EAAwC,EAAnDC,UAAwCC,GAAW,EAA7BC,cAA6B,8CAC9DtD,EAAmBO,qBAAWvD,GAA9BgD,eACAsM,EAAkB/L,qBAAWgM,IAA7BD,cAEFrM,EAAWD,IAEjB,OACE,kBAAC,IAAD,iBACMqD,EADN,CAEEE,OAAQ,SAACnG,GAAD,OACN6C,EAAW,kBAAC,IAAD,CAAUpF,GAAIyR,IAAoB,kBAACnJ,EAAc/F,QCwHrDoP,EAhIE,WAAO,IACd9O,EAAgB6C,qBAAWvD,GAA3BU,YACA2M,EAAwB9J,qBAAWqD,GAAnCyG,oBAFa,EAQjB9J,qBAAWM,GAJba,EAJmB,EAInBA,cACAc,EALmB,EAKnBA,mBACAnB,EANmB,EAMnBA,aACAJ,EAPmB,EAOnBA,QAGIvC,EAAchB,EAAcA,EAAYgB,YAAc,GACtD+N,EAAW/O,EAAcA,EAAY+O,SAAW,GAyEhDC,EAAa5I,iBAAO,MAkB1B,OAhBAlG,qBAAU,WACR,GAAI8O,EACF,GAAIA,EAAWC,UACbD,EAAWC,UAAU,eAChB,CACL,IAAMC,EAAQC,SAASC,YAAY,UACnCF,EAAMG,UAAU,SAAS,GAAM,GAC/BC,YAAW,WACLN,EAAWO,cACbP,EAAWO,aAAaL,KAEzB,QAGN,IAGD,kBAAC,EAAD,KACE,kBAAC,IAAMrS,SAAP,KACG0G,EACC2K,EAEA,kBAAC,IAAMrR,SAAP,KACE,yBACEoG,IAAK8L,EACLjM,IAAI,cACJ0M,MAAM,QACN1S,UAAU,gBAEZ,6BACA,sCAAQkE,IACR,yBAAKgG,IAAKgI,EAAYlS,UAAU,oBAxGZ,WAC5B,IAAI2S,EAAuB,GAmC3B,OAjCAzL,EAAcG,SAAQ,SAACO,GACrB,IAAI7C,EAAQ,GAEZ,cAAe6C,EAAM7C,OACnB,IAAK,QACHA,EAAQ6C,EAAM7C,MAAMiC,OACpB,MAEF,IAAK,SACHjC,EAAQ6N,OAAOC,KAAKjL,EAAM7C,OAAOiC,OACjC,MAEF,QACEjC,EAAQ6C,EAAM7C,MAIlB4N,EAAqBpL,KACnB,wBACEvH,UAAS,wBACP4H,EAAMX,OAAS,uBAAyB,IAE1ChB,QAAS+B,EACTwD,IAAK5D,EAAMb,KACXA,KAAMa,EAAMb,MAEZ,uBAAG/G,UAAU,uBAAuB+E,GACpC,6BACA,uBAAG/E,UAAU,sBAAsB4H,EAAMb,WAKxC,wBAAI/G,UAAU,kBAAkB2S,GAqE5BG,IA3DgB,WAG3B,IAFA,IAAIC,EAAc,GAET/H,EAAI,EAAGA,EAAI9D,EAAcF,OAAQgE,IACxC,GAAI9D,EAAc8D,GAAG/D,OAAQ,CAC3B8L,EAAc7L,EAAc8D,GAAGjE,KAC/B,MAIJ,IAAIiM,EAAU,GAEd,OAAQD,GACN,IAAK,gBACHC,EArBsB,WAC1B,IAAIA,EAGJ,OADAA,EAAUnD,EAAoBhJ,EAAc,YACrC,kBAAC,IAAM9G,SAAP,KAAiBiT,GAiBVC,GAQd,OAAO,yBAAKjT,UAAU,mBAAmBgT,GAuChCE,OChHEC,GAZM,WACnB,OACE,kBAAC,EAAD,KACE,wBAAInT,UAAU,aAAd,OACA,wBAAIA,UAAU,yBAAd,qCAGA,uECEO+R,GAAatP,IAAMC,gBAsHjB0Q,G,4MAnHb9G,MAAQ,CACN+G,UAAW,CACT,CACEtM,KAAM,UACN6B,UAAW0K,EACXxC,KAAM,SAGVyC,UAAW,CACT,CACExM,KAAM,eACN6B,UAAWoJ,EACXlB,KAAM,WAER,CACE/J,KAAM,UACN6B,UAAWyI,EACXP,KAAM,WAER,CACE/J,KAAM,UACN6B,UAAW4K,EACX1C,KAAM,YAGV2C,YAAa,CAAC,WAAY,YAC1B3B,cAAe,K,EAoBjB4B,wBAA0B,SAACC,GACzB,MAAiB,SAAbA,EACK,IAED,IAAN,OAAWA,EAASC,QAAQ,OAAQ,KAAK7R,gB,EAI7C8R,eAAiB,WACf,IAAIC,EAAS,GAEPC,EAAmB,SAACC,GACxBA,EAAM3M,SAAQ,SAAC8C,EAAMoB,GACnB,IAAM0I,EAAY,EAAKP,wBAAwBvJ,EAAKpD,MAElC,SAAdoD,EAAK2G,KACPgD,EAAOvM,KACL,kBAAC,EAAD,CACEiE,IAAKrB,EAAKpD,KACVmN,OAAK,EACL9D,KAAM6D,EACNrL,UAAWuB,EAAKvB,aAGG,YAAduB,EAAK2G,MACdgD,EAAOvM,KACL,kBAAC,EAAD,CACEiE,IAAKrB,EAAKpD,KACVmN,OAAK,EACL9D,KAAM6D,EACNrL,UAAWuB,EAAKvB,iBAU1B,OAHAmL,EAAiB,EAAKzH,MAAM+G,WAC5BU,EAAiB,EAAKzH,MAAMiH,WAErBO,G,EAGTK,mBAAqB,WACnB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAWD,OAAK,EAAC9D,KAAK,IAAIxH,UAAW9I,IACpC,EAAK+T,iBACN,kBAAC,EAAD,CAAcK,OAAK,EAAC9D,KAAK,cAAcxH,UAAW4B,IAClD,kBAAC,IAAD,CAAO5B,UAAWuK,O,0EAlEK,IAAD,SACO7C,KAAKhE,MAA9B+G,EADkB,EAClBA,UAAWE,EADO,EACPA,UAEnBF,EAAUhM,SAAQ,SAAC8C,GACjBA,EAAKiK,MAAQ,EAAKV,wBAAwBvJ,EAAKpD,SAEjDwM,EAAUlM,SAAQ,SAAC8C,GACjBA,EAAKiK,MAAQ,EAAKV,wBAAwBvJ,EAAKpD,SAGjDuJ,KAAKpD,SAAS,CACZmG,YACAE,YACAzB,cAAeyB,EAAU,GAAGa,U,+BA2D9B,OACE,kBAACrC,GAAWjN,SAAZ,CACEC,MAAK,eACAuL,KAAKhE,MADL,CAEHoH,wBAAyBpD,KAAKoD,wBAC9BS,mBAAoB7D,KAAK6D,sBAG1B7D,KAAK1N,MAAM+C,c,GA9GagD,aCkElB0L,GA5EA,SAACzR,GACd,IAAM0R,EAAavO,qBAAWgM,IAExBwC,EAASjL,iBAAO,MA2BhBkL,EAAgB,SAACvM,GAECoK,SAASoC,cAAc,mBAC/BtM,UAAUuM,OAAO,iBAG/B,IAAMH,EAASlC,SAASoC,cAAc,WAClCF,GACFA,EAAOpM,UAAUuM,OAAO,kBAc5B,OACE,yBAAK1U,UAAU,UACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CACEK,GAAmB,aAAfuC,EAAMkO,KAAsB,IAAMwD,EAAWxC,eAEjD,yBACE9R,UAAU,0CACVgG,IAAI,gBAIV,yBAAKhG,UAAU,kBACb,wBAAIA,UAAU,eA5DD,WACjB,IAAI2U,EAAS,GAqBb,OApBcL,EAAW,GAAD,OAAI1R,EAAMkO,KAAV,MAElBzJ,SAAQ,SAAC8C,EAAMoB,GACD,SAAdpB,EAAKpD,MACP4N,EAAOpN,KACL,wBAAIvH,UAAU,cAAcwL,IAAKD,GAC/B,kBAAC,IAAD,CACElL,GAAI8J,EAAKiK,MACTpU,UAAS,sBACO,YAAdmK,EAAKpD,MAAsB,uBAE7BzG,gBAAgB,qBAChB2F,QAASuO,GAET,2BAAIrK,EAAKpD,YAMZ4N,EAsC0BC,KAE/B,yBAAK1K,IAAKqK,EAAQvU,UAAU,SAASiG,QAASuO,GAC5C,yBAAKxU,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,oBChER6U,GARA,WACb,OACE,yBAAK7U,UAAU,UACb,oFCkBS8U,GAjBG,SAAClS,GAAW,IAAD,EACiBmD,qBAAWgM,IAA/CoC,EADmB,EACnBA,mBAAoBV,EADD,EACCA,YAKtBsB,GAFWvP,EAFUO,qBAAWvD,GAA9BgD,kBAIsBiO,EAAY,GAAKA,EAAY,GAE3D,OACE,kBAAC,IAAM1T,SAAP,KACE,kBAAC,GAAD,CAAQ+Q,KAAMiE,IACbZ,IACD,kBAAC,GAAD,QCQSa,GAlBH,WACV,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAMlV,SAAP,KACE,kBAAC,GAAD,aCJImV,QACW,cAA7B1Q,OAAO2Q,SAASC,UAEe,UAA7B5Q,OAAO2Q,SAASC,UAEhB5Q,OAAO2Q,SAASC,SAAS3K,MACvB,2DAiHA,kBAAmB4K,WACrBA,UAAUC,cAAcC,MACrBtT,MAAK,SAAAuT,GACJA,EAAaC,gBAEdrT,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAMgC,YCjI5BmR,IAAS3M,OACP,kBAAC,IAAM4M,WAAP,KACE,kBAAC,GAAD,OAEFtD,SAASuD,eAAe,W","file":"static/js/main.6a15ec21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google_G.713f5b25.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUtensils,\n  faHeart,\n  faShareSquare,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst HomePage = () => {\n  return (\n    <React.Fragment>\n      <div className=\"page home-page\">\n        <br />\n        <div className=\"content-container\">\n          <div className=\"illustration\"></div>\n          <div className=\"home-page-caption-container\">\n            <h1 className=\"home-page-caption\">Boost your cooking game</h1>\n            <br />\n            <h3 className=\"home-page-caption-subtitle\">\n              Find amazing recipes for the ingredients you have left at home\n            </h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-page-desc desc-1\">\n        <br />\n        <br />\n        <div className=\"centered-container desc-content\">\n          <h2 className=\"desc-title desc-title-1\">\n            Take home-cooking to the next level\n          </h2>\n          <div className=\"flex-container\">\n            <div className=\"flex-item desc-1-item\">\n              <FontAwesomeIcon icon={faUtensils} className=\"desc-1-item-icon\" />\n              <p className=\"desc-1-item-text\">Explore great meal options</p>\n            </div>\n            <div className=\"flex-item desc-1-item\">\n              <FontAwesomeIcon icon={faHeart} className=\"desc-1-item-icon\" />\n              <p className=\"desc-1-item-text\">Save your favorites</p>\n            </div>\n            <div className=\"flex-item desc-1-item\">\n              <FontAwesomeIcon\n                icon={faShareSquare}\n                className=\"desc-1-item-icon\"\n              />\n              <p className=\"desc-1-item-text\">Share your own recipes</p>\n            </div>\n          </div>\n          <br />\n          <div className=\"desc-1-bottom-text\">\n            <h3>Your all-in-one recipe app</h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-page-desc desc-join\">\n        <br />\n        <br />\n        <div className=\"centered-container\">\n          <h2 className=\"desc-title desc-join-title\">\n            Join CookCycle for <span className=\"word-highlight\">FREE</span> now!\n          </h2>\n          <br />\n          <div className=\"navbar-item\">\n            <NavLink\n              to=\"/sign-in\"\n              className=\"navbar-link navbar-link-sign-in sign-in-home-page\"\n              activeClassName=\"navbar-link-active\"\n            >\n              <p>Sign In</p>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import * as firebase from \"firebase/app\";\n// const firebase = require(\"firebase/app\");\nimport \"firebase/auth\";\n\n// require(\"firebase/auth\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport const app = firebase.initializeApp(firebaseConfig);\n\n// export const admin = require(\"firebase-admin\");\n\n// admin.initializeApp();\n\nexport default { app };\n","import axios from \"axios\";\n\naxios.defaults.baseURL =\n  \"https://europe-west3-cookcycle-2e4a5.cloudfunctions.net/api\";\n\nexport const Axios = axios;\n\nexport default Axios;\n","import Axios from \"../util/axios\";\n\nconst baseURL = process.env.REACT_APP_COOKCYCLE_API_BASEURL;\n\nexport const cookcycleApiCall = async (\n  methodType,\n  apiCommand,\n  requestBody = {}\n) => {\n  const url = `${baseURL}${apiCommand}`;\n\n  // console.log(url, requestBody);\n\n  return await new Promise((resolve, reject) => {\n    try {\n      Axios({\n        method: methodType.toLowerCase(),\n        url,\n        data: requestBody,\n      })\n        .then((response) => {\n          // console.log(response);\n          if (response.status >= 200 && response.status < 300) {\n            resolve({ data: response.data, status: response.status });\n          } else if (response.status === 401) {\n            // console.error(\n            //   `Error 401, apiCommand: ${apiCommand} ${\n            //     requestBody !== {} &&\n            //     `requestBody: ${JSON.stringify(requestBody)}`\n            //   }`\n            // );\n            reject(\"Unauthenticated\");\n          } else if (response.status === 500) {\n            // console.log(response);\n\n            // console.error(\n            //   `Error 500, apiCommand: ${apiCommand} ${\n            //     requestBody !== {} &&\n            //     `requestBody: ${JSON.stringify(requestBody)}`\n            //   }`\n            // );\n            reject(\"Server error!\");\n          }\n        })\n        .catch((err) => {\n          // console.error(\n          //   `Error, apiCommand: ${apiCommand} ${\n          //     requestBody !== {} &&\n          //     `requestBody: ${JSON.stringify(requestBody)}`\n          //   }`\n          // );\n          reject(err);\n        });\n    } catch (err) {\n      console.error(err);\n      reject(err);\n    }\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport { app } from \"../util/firebase\";\nimport Axios from \"../util/axios\";\nimport { cookcycleApiCall } from \"../util/fetch\";\n\nexport const AuthContext = React.createContext();\n\nconst AuthContextProvider = (props) => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [firebaseIdToken, setFirebaseIdToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setIsSignedIn(!!user);\n    });\n  });\n\n  const validateSignIn = () => {\n    const loggedIn =\n      currentUser ||\n      localStorage.getItem(\"currentUser\") ||\n      firebaseIdToken ||\n      localStorage.getItem(\"firebaseIdToken\");\n\n    return loggedIn !== null && loggedIn !== \"null\";\n  };\n\n  const facebookSignIn = () => {\n    let facebookProvider = new firebase.auth.FacebookAuthProvider();\n    app.auth().useDeviceLanguage();\n\n    return signInWith(facebookProvider);\n  };\n\n  const googleSignIn = () => {\n    var googleProvider = new firebase.auth.GoogleAuthProvider();\n\n    return signInWith(googleProvider);\n  };\n\n  const signInWith = (provider) => {\n    app\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = `Bearer ${result.credential.accessToken}`;\n        setFirebaseIdToken(token);\n        // The signed-in user info.\n        var user = result.user;\n        setCurrentUser(user);\n        updateLocalStorageUserData(user, token);\n\n        const userCredentials = {\n          email: user.email,\n          displayName: user.displayName,\n          providerData: user.providerData,\n        };\n\n        Axios.post(\"/register-user\", userCredentials)\n          .then((response) => {\n            // console.log(response);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n\n        if (userCredentials.email) {\n          const requestBody = {\n            username: userCredentials.email,\n          };\n\n          cookcycleApiCall(\"post\", \"user/add\", requestBody)\n            .then((response) => {\n              if (response.data) {\n              }\n            })\n            .catch((err) => {\n              console.error(err);\n            });\n        }\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        console.error(error);\n        // var errorCode = error.code;\n        var errorMessage = error.message;\n\n        // The email of the user's account used.\n        // var email = error.email;\n\n        // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        window.alert(errorMessage);\n        // ...\n      });\n  };\n\n  const signOut = () => {\n    app\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n        setFirebaseIdToken(null);\n        setCurrentUser(null);\n        updateLocalStorageUserData(null, null);\n        // window.alert(\"Sign out successful!\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.error(error);\n      });\n  };\n\n  const updateLocalStorageUserData = (user, token) => {\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    localStorage.setItem(\"firebaseIdToken\", token);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isSignedIn,\n        facebookSignIn,\n        googleSignIn,\n        currentUser,\n        signOut,\n        validateSignIn,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n","import React from \"react\";\n\nconst Page = (props) => {\n  return (\n    <React.Fragment>\n      <div className=\"page\">\n        <div className=\"content-container\">\n          <div className=\"centered-container\">\n            {props.title && (\n              <React.Fragment>\n                <br />\n                <h2>{props.title}</h2>\n              </React.Fragment>\n            )}\n            <br />\n            {props.children}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\nimport googleIcon from \"../images/google_G.svg\";\nimport Page from \"./Page\";\n\nconst SignInPage = () => {\n  const { facebookSignIn, googleSignIn } = useContext(AuthContext);\n\n  const renderSignInMethodButtons = () => {\n    return (\n      <React.Fragment>\n        <button\n          className=\"btn btn-sign-in btn-facebook link\"\n          onClick={facebookSignIn}\n        >\n          <FontAwesomeIcon icon={faFacebookF} className=\"facebook-icon\" />\n          &emsp;Sign in with Facebook\n        </button>\n        <br />\n        <button\n          className=\"btn btn-sign-in btn-google link\"\n          onClick={googleSignIn}\n        >\n          <img src={googleIcon} alt=\"\" className=\"google-icon\" />\n          &emsp;Sign in with Google\n        </button>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Page>\n      <div className=\"signin-logo-img\">\n        <img className=\"\" alt=\"CookCycle\" />\n      </div>\n      <br />\n      {renderSignInMethodButtons()}\n    </Page>\n  );\n};\n\nexport default withRouter(SignInPage);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"../util/axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { cookcycleApiCall } from \"../util/fetch\";\n\nexport const UserContext = React.createContext();\n\nconst UserContextProvider = (props) => {\n  const { isSignedIn, currentUser } = useContext(AuthContext);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [recipesUpdated, setRecipesUpdated] = useState(false);\n  const [savedRecipes, setSavedRecipes] = useState([]);\n\n  const [profileFields, setProfileFields] = useState([\n    {\n      name: \"Saved Recipes\",\n      value: savedRecipes.length,\n      active: true,\n    },\n  ]);\n\n  const selectProfileField = (event) => {\n    let { target } = event;\n\n    while (!target.classList.value.includes(\"profile-field \")) {\n      target = target.parentNode;\n    }\n    const selectedField = target.getAttribute(\"name\");\n\n    const updatedProfileFields = profileFields.map((field) => {\n      if (field.name === selectedField) {\n        field.active = true;\n      } else {\n        field.active = false;\n      }\n      return field;\n    });\n\n    setProfileFields(updatedProfileFields);\n  };\n\n  useEffect(() => {\n    const updateSavedRecipeField = (recipeCount) => {\n      let currentProfileFields = [];\n\n      profileFields.forEach((field) => {\n        let newValue = field.value;\n\n        if (field.name === \"Saved Recipes\") {\n          newValue = recipeCount;\n        }\n\n        let newField = {\n          name: field.name,\n          value: newValue,\n          active: field.active,\n        };\n\n        currentProfileFields.push(newField);\n      });\n\n      setProfileFields(currentProfileFields);\n    };\n\n    setLoading(true);\n\n    if (currentUser || isSignedIn) {\n      try {\n        cookcycleApiCall(\"post\", \"user/getfavoritesbyusername\", {\n          username: currentUser.email,\n        })\n          .then((response) => {\n            if (response.data) {\n              let userRecipes = [];\n\n              response.data.forEach((result) => {\n                cookcycleApiCall(\"get\", `recipe/getbyid/${result.recipeId}`)\n                  .then((response) => {\n                    userRecipes.push({\n                      recipeId: result.recipeId,\n                      numOfMissingIngredients: 0,\n                      recipe: response.data,\n                    });\n                  })\n                  .catch((err) => {\n                    console.error(err);\n                  });\n              });\n\n              setSavedRecipes(userRecipes);\n              updateSavedRecipeField(response.data.length);\n              setRecipesUpdated(false);\n              setLoading(false);\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n            setLoading(false);\n          });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [currentUser, isSignedIn, recipesUpdated]);\n\n  useEffect(() => {\n    if (isSignedIn && currentUser) {\n      if (!userData) {\n        Axios.post(\"/user/data\", { email: currentUser.email })\n          .then((response) => {\n            if (response.status >= 200 && response.status < 300) {\n              setUserData(response.data);\n            } else {\n              console.error(\n                `Error ${response.status}\n                }`\n              );\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    }\n  }, [isSignedIn, currentUser, userData]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        userData,\n        profileFields,\n        selectProfileField,\n        savedRecipes,\n        loading,\n        setRecipesUpdated,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => {\n  const { validateSignIn } = useContext(AuthContext);\n\n  const loggedIn = validateSignIn();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !loggedIn ? <Redirect to=\"/sign-in\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart as faHeartSolid,\n  faStopwatch,\n  faBalanceScale,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nconst RecipeCard = (props) => {\n  const [saved, setSaved] = useState(props.saved);\n  const { toggleSaveRecipe } = useContext(RecipesContext);\n\n  const { currentUser } = useContext(AuthContext);\n  const cardTitleRef = useRef(null);\n\n  useEffect(() => {\n    setSaved(props.saved);\n  }, [props.saved]);\n\n  const { recipe, recipeId, numOfMissingIngredients } = props.recipe;\n\n  const getTotalTime = () => {\n    const parsedCookTime = parseInt(recipe.cookTime.split(\" \")[0]);\n    const parsedPrepTime = parseInt(recipe.prepTime.split(\" \")[0]);\n\n    const cookTime = isNaN(parsedCookTime) ? 0 : parsedCookTime;\n    const prepTime = isNaN(parsedPrepTime) ? 0 : parsedPrepTime;\n\n    return cookTime + prepTime;\n  };\n\n  return (\n    <div className=\"recipe-card card-appearance\" recipeid={recipeId}>\n      <div\n        className=\"save-recipe\"\n        onClick={() => toggleSaveRecipe(recipeId, currentUser, saved, setSaved)}\n      >\n        <FontAwesomeIcon\n          className=\"save-recipe-icon\"\n          icon={saved ? faHeartSolid : faHeart}\n        />\n      </div>\n      <div className=\"recipe-card-content\">\n        <Link to={`/recipe/${recipeId}`}>\n          <img src={recipe.img_url} alt=\"\" className=\"recipe-card-img\" />\n          <div className=\"recipe-card-detail-container\">\n            <div className=\"recipe-card-details\">\n              <div ref={cardTitleRef} className=\"recipe-card-title\">\n                <p>{recipe.name}</p>\n              </div>\n              {!props.page.toLowerCase().includes(\"user\") && (\n                <React.Fragment>\n                  <p className=\"recipe-bottom-item recipe-card-missing-ingredients\">\n                    {numOfMissingIngredients}\n                    &nbsp;missing ingredient\n                    {numOfMissingIngredients !== 1 && \"s\"}\n                  </p>\n                </React.Fragment>\n              )}\n              <div className=\"recipe-detials-bottom-row\">\n                <p className=\"recipe-bottom-item recipe-card-difficulty\">\n                  <FontAwesomeIcon\n                    className=\"recipe-details-icon\"\n                    icon={faBalanceScale}\n                  />{\" \"}\n                  &nbsp;\n                  {recipe.difficulty.trim()}\n                </p>\n                <p className=\"recipe-bottom-item recipe-card-total-time\">\n                  <FontAwesomeIcon\n                    className=\"recipe-details-icon\"\n                    icon={faStopwatch}\n                  />{\" \"}\n                  &nbsp;\n                  {getTotalTime() > 0 ? (\n                    <span>{getTotalTime()}&nbsp;mins</span>\n                  ) : (\n                    <span>N/A</span>\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeCard;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Page from \"./Page\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as faHeartSolid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { cookcycleApiCall } from \"../util/fetch\";\n\nconst RecipeDetails = ({ match }) => {\n  const { toggleSaveRecipe } = useContext(RecipesContext);\n  const { currentUser } = useContext(AuthContext);\n\n  const [recipe, setRecipe] = useState(null);\n  const [saved, setSaved] = useState(null);\n\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      cookcycleApiCall(\"get\", `recipe/getbyid/${match.params.id}`)\n        .then((response) => {\n          const currentRecipe = response.data;\n          setRecipe(currentRecipe);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    };\n\n    fetchRecipe();\n  }, [match.params.id]);\n\n  useEffect(() => {\n    const setRecipeSaveState = async () => {\n      if (currentUser) {\n        cookcycleApiCall(\"post\", \"user/getfavoritesbyusername\", {\n          username: currentUser.email,\n        })\n          .then((response) => {\n            if (response.data) {\n              let saveStatus = false;\n              for (let i = 0; i < response.data.length; i++) {\n                if (response.data[i].recipeId === parseInt(match.params.id)) {\n                  saveStatus = true;\n                  break;\n                }\n              }\n              setSaved(saveStatus);\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    };\n\n    setRecipeSaveState();\n  }, [recipe, currentUser, match.params.id]);\n\n  const drawIngredients = () => {\n    let ingredientsListItems = [];\n\n    recipe.ingredientsInRecipe.forEach((ingredient, index) => {\n      ingredientsListItems.push(<li key={index}>{ingredient.string}</li>);\n    });\n\n    return (\n      <ul className=\"recipe-focus-ingredient-list\">{ingredientsListItems}</ul>\n    );\n  };\n\n  const drawRecipeDetials = () => {\n    const details = [\n      {\n        name: \"servings\",\n        label: \"Servings\",\n      },\n      {\n        name: \"prepTime\",\n        label: \"Prep time\",\n      },\n      {\n        name: \"cookTime\",\n        label: \"Cook time\",\n      },\n      {\n        name: \"difficulty\",\n        label: \"Difficulty\",\n      },\n    ];\n\n    let detailListItems = [];\n\n    details.forEach((detail, index) => {\n      if (recipe[detail.name] && recipe[detail.name].trim() !== \"\") {\n        let { label } = detail;\n        let value = detail.value || recipe[detail.name];\n\n        if (detail.name === \"servings\") {\n          detailListItems.push(<li key={label}>{value}</li>);\n        } else {\n          detailListItems.push(\n            <li key={label}>\n              {label}:&ensp;{value}\n            </li>\n          );\n        }\n        if (index < details.length - 1) {\n          if (window.innerWidth > 800) {\n            detailListItems.push(<li key={index}>|</li>);\n          } else {\n            detailListItems.push(<br key={index} />);\n          }\n        }\n      }\n    });\n\n    return <ul>{detailListItems}</ul>;\n  };\n\n  const displayRecipeInstructions = () => {\n    const instructionLines = recipe.method.split(\". \");\n    let instructions = [];\n\n    instructionLines.forEach((line, index) => {\n      if (line.trim() !== \"\" && line.trim() !== \".\") {\n        let period = \".\";\n\n        if (index === instructionLines.length - 1) {\n          period = \"\";\n        }\n\n        instructions.push(\n          <li key={index}>\n            <p>{`${line.trim()}${period}`}</p>\n          </li>\n        );\n      }\n    });\n\n    return <ul className=\"recipe-instructions\">{instructions}</ul>;\n  };\n\n  return (\n    <Page>\n      {recipe && (\n        <>\n          {saved !== null && (\n            <div\n              className=\"save-recipe save-recipe-focus\"\n              onClick={() =>\n                toggleSaveRecipe(recipe.id, currentUser, saved, setSaved)\n              }\n            >\n              <FontAwesomeIcon\n                className=\"save-recipe-icon\"\n                icon={saved ? faHeartSolid : faHeart}\n              />\n            </div>\n          )}\n          <div className=\"recipe-focus-container\">\n            <h1>{recipe.name}</h1>\n            {recipe.author && (\n              <h4 className=\"recipe-author\">Author:&ensp;{recipe.author}</h4>\n            )}\n            <img\n              src={recipe.img_url}\n              className=\"recipe-focus-img\"\n              alt={recipe.name}\n            />\n            <br />\n            <div className=\"recipe-focus-details\">{drawRecipeDetials()}</div>\n            <br />\n            <h3>Ingredients</h3>\n            <div className=\"recipe-focus-section-container\">\n              {drawIngredients()}\n            </div>\n            <br />\n            <h3>Instructions</h3>\n            <div className=\"recipe-focus-section-container\">\n              {displayRecipeInstructions()}\n            </div>\n          </div>\n        </>\n      )}\n    </Page>\n  );\n};\n\nexport default RecipeDetails;\n","import React, { Component } from \"react\";\nimport { cookcycleApiCall } from \"../util/fetch\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport RecipeCard from \"../components/recipes/RecipeCard\";\nimport RecipeDetails from \"../pages/RecipeDetails\";\n\nexport const RecipesContext = React.createContext();\n\nclass ReciepsContextProvider extends Component {\n  state = {\n    ingredientSearchInput: \"\",\n    ingredientSuggestions: [],\n    selectedIngredients: [],\n    autocompleteResultLimit: 5,\n    recipeSearchResults: [],\n    cursor: -1,\n    recipeFocusVisible: false,\n    selectedRecipe: \"\",\n    loading: false,\n    searchInitialized: false,\n    recipeRoutes: [],\n  };\n\n  static contextType = UserContext;\n\n  addIngredient = (ingredient) => {\n    let { selectedIngredients } = this.state;\n\n    selectedIngredients.push(ingredient);\n\n    this.setState({\n      selectedIngredients,\n    });\n  };\n\n  searchRecipes = () => {\n    const { selectedIngredients } = this.state;\n\n    this.setState({\n      recipeSearchResults: [],\n      loading: true,\n      searchInitialized: true,\n    });\n\n    cookcycleApiCall(\"post\", \"recipe/getavailablerecipes\", selectedIngredients)\n      .then((response) => {\n        if (response.data) {\n          this.setState({\n            recipeSearchResults: response.data,\n            loading: false,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  removeIngredient = (event) => {\n    const { selectedIngredients } = this.state;\n\n    const ingredientToRemove = event.target.name;\n\n    const newIngredients = selectedIngredients.filter((ingredient) => {\n      return ingredient !== ingredientToRemove;\n    });\n\n    this.setState({\n      selectedIngredients: newIngredients,\n    });\n  };\n\n  ingredientSearch = (inputString) => {\n    if (inputString.length > 0) {\n      const ingredients = require(\"../data/ingredientList.json\");\n\n      inputString = inputString.toLowerCase();\n\n      let suggestions = ingredients.filter((ingredient) => {\n        return ingredient.name.includes(inputString);\n      });\n\n      suggestions = this.sortIngredientsInputFirst(inputString, suggestions);\n\n      if (suggestions.length === 0) {\n        this.setState({\n          ingredientSuggestions: [],\n        });\n      } else {\n        this.setState({\n          ingredientSuggestions: suggestions,\n        });\n      }\n    }\n  };\n\n  sortIngredientsInputFirst = (input, data) => {\n    var first = [];\n    var others = [];\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].name.indexOf(input) === 0) {\n        first.push(data[i]);\n      } else {\n        others.push(data[i]);\n      }\n    }\n    first.sort();\n    others.sort();\n    return first.concat(others);\n  };\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      ingredientSearchInput: value,\n      cursor: -1,\n    });\n\n    if (value === \"\") {\n      this.setState({\n        ingredientSuggestions: [],\n      });\n    } else {\n      this.ingredientSearch(value);\n    }\n  };\n\n  populateSuggestions = () => {\n    const { ingredientSuggestions, cursor, selectedIngredients } = this.state;\n\n    let suggestions = [];\n\n    let ingredientCount = 0;\n    ingredientSuggestions.forEach((suggestion, index) => {\n      if (ingredientCount < this.state.autocompleteResultLimit) {\n        let selected = false;\n        for (let i = 0; i < selectedIngredients.length; i++) {\n          if (selectedIngredients[i] === suggestion.name) {\n            selected = true;\n            break;\n          }\n        }\n\n        if (!selected) {\n          suggestions.push(\n            <li\n              className={`suggestion ${\n                cursor === index ? \"suggetion-active\" : \"\"\n              }`}\n              key={index}\n              value={suggestion.name}\n              onClick={this.selectSuggestion}\n              onMouseOver={(event) => {\n                event.target.classList.add(\"suggetion-active\");\n                if (cursor > -1) {\n                  this.setState({\n                    cursor: -1,\n                  });\n                }\n              }}\n              onMouseLeave={(event) => {\n                event.target.classList.remove(\"suggetion-active\");\n              }}\n            >\n              {suggestion.name}\n            </li>\n          );\n          ingredientCount++;\n        }\n      }\n    });\n\n    return suggestions;\n  };\n\n  handleKeyDown = (event) => {\n    const { cursor, ingredientSuggestions } = this.state;\n    const { keyCode } = event;\n\n    switch (keyCode) {\n      case 38: {\n        event.preventDefault();\n        // Up arrow\n        if (cursor > 0) {\n          this.setState((prevState) => ({\n            cursor: prevState.cursor - 1,\n          }));\n        }\n        break;\n      }\n      case 40: {\n        // Down arrow\n        const limit =\n          Math.min(\n            this.state.autocompleteResultLimit,\n            ingredientSuggestions.length\n          ) - 1;\n        if (cursor < limit) {\n          this.setState((prevState) => ({\n            cursor: prevState.cursor + 1,\n          }));\n        }\n        break;\n      }\n      case 13:\n      // Enter/Return\n      /* falls through */\n      case 9: {\n        // Tab\n        if (ingredientSuggestions.length > 0) {\n          event.preventDefault();\n          if (keyCode === 9 && cursor === -1) {\n            this.setState((prevState) => ({\n              cursor: prevState.cursor + 1,\n            }));\n          } else {\n            this.selectSuggestion(event);\n          }\n        }\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  };\n\n  selectSuggestion = (event) => {\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      this.keyboardPressSuggestionSelection();\n    } else {\n      this.mouseClickSuggestionSelection(event);\n    }\n\n    this.setState((prevState) => ({\n      cursor: -1,\n      ingredientSearchInput: \"\",\n      ingredientSuggestions: [],\n    }));\n  };\n\n  keyboardPressSuggestionSelection = () => {\n    const { cursor } = this.state;\n    let suggestion;\n\n    try {\n      suggestion = this.state.ingredientSuggestions[cursor];\n\n      this.addIngredient(suggestion.name);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  mouseClickSuggestionSelection = (event) => {\n    const ingredient = event.target.getAttribute(\"value\");\n\n    try {\n      this.addIngredient(ingredient);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  onRecipeSelection = (event) => {\n    let { target } = event;\n\n    try {\n      while (\n        !target.classList.value.includes(\"recipe-card \") &&\n        target.classList.value !== \"save-recipe\"\n      ) {\n        target = target.parentNode;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  addRecipeToFavorites = async (recipeId, userEmail) => {\n    const requestData = { username: userEmail, recipeId: recipeId };\n\n    return new Promise((resolve, reject) => {\n      try {\n        cookcycleApiCall(\"post\", \"favorite/add\", requestData)\n          .then((result) => {\n            this.context.setRecipesUpdated(true);\n            resolve(result);\n          })\n          .catch((err) => {\n            console.error(err);\n            reject(\"Error adding recipe to favorites\");\n          });\n      } catch (err) {\n        reject(\"Error adding recipe to favorites\");\n      }\n    });\n  };\n\n  removeRecipeFromFavorites = async (recipeId, userEmail) => {\n    const requestData = { user: userEmail, recipeId: recipeId };\n\n    return new Promise((resolve, reject) => {\n      try {\n        cookcycleApiCall(\"post\", \"favorite/delete\", requestData)\n          .then((result) => {\n            console.log(result);\n            this.context.setRecipesUpdated(true);\n            resolve(result);\n          })\n          .catch((err) => {\n            console.error(err);\n            reject(\"Error removing recipe from favorites\");\n          });\n      } catch (err) {\n        console.error(err);\n        reject(\"Error removing recipe from favorites\");\n      }\n    });\n  };\n\n  drawSearchedRecipes = (recipeList, page = \"\") => {\n    const { savedRecipes } = this.context;\n\n    const recipes = recipeList.map((recipe, index) => {\n      let isSaved = false;\n\n      savedRecipes.forEach((saved) => {\n        if (saved.recipeId === recipe.recipeId) {\n          isSaved = true;\n        }\n      });\n\n      return (\n        <RecipeCard key={index} recipe={recipe} saved={isSaved} page={page} />\n      );\n    });\n\n    if (recipes.length > 0) {\n      return recipes;\n    } else {\n      if (this.state.searchInitialized) {\n        return <p className=\"no-recipes-msg\">No recipes found</p>;\n      }\n    }\n  };\n\n  toggleSaveRecipe = async (recipeId, currentUser, isSaved, saveMethod) => {\n    if (!isSaved) {\n      saveMethod(true);\n\n      await this.addRecipeToFavorites(recipeId, currentUser.email)\n        .then((response) => {\n          console.log(response);\n\n          if (\n            response.status >= 200 &&\n            response.status < 300 &&\n            response.data.id\n          ) {\n            // Do Nothing\n          } else {\n            saveMethod(false);\n            window.alert(\"Error adding recipe to favorites\");\n          }\n        })\n        .catch((err) => {\n          window.alert(\"Error adding recipe to favorites\");\n          console.error(err);\n        });\n    } else {\n      saveMethod(false);\n\n      await this.removeRecipeFromFavorites(recipeId, currentUser.email)\n        .then((response) => {\n          console.log(response);\n\n          if (response.status >= 200 && response.status < 300) {\n            // Do Nothing\n          } else {\n            saveMethod(true);\n            window.alert(\"Error removing recipe to favorites\");\n          }\n        })\n        .catch((err) => {\n          window.alert(\"Error removing recipe to favorites\");\n          console.error(err);\n        });\n    }\n  };\n\n  setRecipeRoutes = () => {\n    const { savedRecipes } = this.context;\n    const { recipeSearchResults } = this.state;\n\n    let recipeRoutes = [];\n\n    const addRecipeRoutesToArray = (recipeList) => {\n      recipeList.forEach((recipe) => {\n        recipeRoutes.push(\n          <PrivateRoute\n            key={recipe.recipe.name}\n            path={`/recipe/:recipeId`}\n            component={<RecipeDetails recipe={recipe} />}\n          />\n        );\n      });\n    };\n\n    addRecipeRoutesToArray(savedRecipes);\n    addRecipeRoutesToArray(recipeSearchResults);\n\n    this.setState({\n      recipeRoutes,\n    });\n  };\n\n  clearSearchResults = () => {\n    this.setState({\n      recipeSearchResults: [],\n      searchInitialized: false,\n    });\n  };\n\n  render() {\n    return (\n      <RecipesContext.Provider\n        value={{\n          ...this.state,\n          populateSuggestions: this.populateSuggestions,\n          drawSearchedRecipes: this.drawSearchedRecipes,\n          addIngredient: this.addIngredient,\n          removeIngredient: this.removeIngredient,\n          handleInputChange: this.handleInputChange,\n          handleInputFocus: this.handleInputFocus,\n          handleKeyDown: this.handleKeyDown,\n          selectSuggestion: this.selectSuggestion,\n          searchRecipes: this.searchRecipes,\n          addRecipeToFavorites: this.addRecipeToFavorites,\n          removeRecipeFromFavorites: this.removeRecipeFromFavorites,\n          toggleSaveRecipe: this.toggleSaveRecipe,\n          setRecipeRoutes: this.setRecipeRoutes,\n          clearSearchResults: this.clearSearchResults,\n        }}\n      >\n        {this.props.children}\n      </RecipesContext.Provider>\n    );\n  }\n}\n\nexport default ReciepsContextProvider;\n","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\n\nconst IngredientButton = (props) => {\n  const { removeIngredient } = useContext(RecipesContext);\n\n  return (\n    <button\n      className=\"ingredient\"\n      name={props.ingredient}\n      onClick={removeIngredient}\n    >\n      {props.ingredient}&ensp;\n      <FontAwesomeIcon icon={faTimes} className=\"ingredient-x\" />\n    </button>\n  );\n};\n\nexport default IngredientButton;\n","import React, { useContext } from \"react\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\n\nconst Autocomplete = () => {\n  const {\n    populateSuggestions,\n    ingredientSuggestions,\n    autocompleteResultLimit,\n  } = useContext(RecipesContext);\n\n  return (\n    <div className=\"autocomplete\">\n      <div className=\"suggestions\">\n        <ul>\n          {populateSuggestions()}\n          {ingredientSuggestions.length > autocompleteResultLimit && (\n            <li className=\"more-results\">\n              Continue typing for more results...\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\nimport Autocomplete from \"../Autocomplete\";\n\nconst IngredientSearch = () => {\n  const {\n    ingredientSearchInput,\n    ingredientSuggestions,\n    handleInputChange,\n    handleKeyDown,\n  } = useContext(RecipesContext);\n\n  return (\n    <div className=\"search-bar\">\n      <label className=\"search-label\" htmlFor=\"search-ingredient\">\n        <input\n          type=\"text\"\n          id=\"search-ingredient\"\n          placeholder=\"Search ingredients...\"\n          autoComplete=\"off\"\n          value={ingredientSearchInput}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        />\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n      </label>\n      {ingredientSuggestions.length > 0 && <Autocomplete />}\n    </div>\n  );\n};\n\nexport default IngredientSearch;\n","import React from \"react\";\n\nexport const loader = (\n  <div id=\"preloader\">\n    <div id=\"loader\"></div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport IngredientButton from \"../components/recipes/IngredientButton\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\nimport IngredientSearch from \"../components/recipes/IngredientSearch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport Page from \"./Page\";\nimport { loader } from \"../util/uiUtils\";\n\nconst RecipesPage = () => {\n  const {\n    selectedIngredients,\n    searchRecipes,\n    drawSearchedRecipes,\n    recipeSearchResults,\n    loading,\n    clearSearchResults,\n  } = useContext(RecipesContext);\n\n  const drawSelectedIngredients = () => {\n    let ingredients = [];\n\n    selectedIngredients.forEach((ingredient, index) => {\n      ingredients.push(\n        <li key={index}>\n          <IngredientButton ingredient={ingredient} />\n        </li>\n      );\n    });\n\n    return <ul className=\"selected-ingredients\">{ingredients}</ul>;\n  };\n\n  return (\n    <React.Fragment>\n      <Page>\n        <div className=\"grid-item ingerdients\">\n          <div className=\"ingredient-container\">\n            <h2 className=\"page-subheader\">Ingredients</h2>\n            <IngredientSearch />\n            {selectedIngredients.length > 0 && (\n              <button className=\"btn btn-recipe-search\" onClick={searchRecipes}>\n                Search Recipes&ensp;\n                <FontAwesomeIcon icon={faSearch} />\n              </button>\n            )}\n            <br />\n            {drawSelectedIngredients()}\n          </div>\n        </div>\n        <div className=\"grid-item recipes\">\n          <div className=\"card-container\">\n            {loading ? (\n              loader\n            ) : (\n              <>\n                {recipeSearchResults.length > 0 && (\n                  <React.Fragment>\n                    {/* <hr /> */}\n                    <br />\n                    <button\n                      className=\"btn btn-clear-results\"\n                      onClick={clearSearchResults}\n                    >\n                      Clear Results\n                    </button>\n                    <br />\n                  </React.Fragment>\n                )}\n                {drawSearchedRecipes(recipeSearchResults, \"RecipesPage\")}\n              </>\n            )}\n          </div>\n        </div>\n      </Page>\n    </React.Fragment>\n  );\n};\n\nexport default RecipesPage;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport Page from \"./Page\";\n// import { AccountContext } from \"../contexts/AccountContext\";\n\nconst Account = () => {\n  const { signOut, currentUser } = useContext(AuthContext);\n\n  const accountFields = [\n    {\n      name: \"displayName\",\n      label: \"Display Name\",\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n    },\n  ];\n\n  const renderAccountFields = (\n    i_accountFields,\n    fromCurrentUser = false,\n    input = false\n  ) => {\n    let accountFieldToRender = [];\n    let value = \"\";\n\n    i_accountFields.forEach((field) => {\n      if (fromCurrentUser) {\n        value = (\n          <h3 className=\"account-field-value\">{currentUser[field.name]}</h3>\n        );\n      } else if (input) {\n        value = (\n          <input\n            type=\"text\"\n            // onChange={handlePasswordChange}\n            name={field.name}\n          ></input>\n        );\n      } else {\n        value = <h3 className=\"account-field-value\">{field.name}</h3>;\n      }\n\n      accountFieldToRender.push(\n        <div className=\"account-field\" key={field.name}>\n          <h4 className=\"account-field-header\">{field.label}</h4>\n          {value}\n          <br />\n        </div>\n      );\n    });\n\n    return accountFieldToRender;\n  };\n\n  const onUserSignOutClick = (event) => {\n    const isSure = window.confirm(\"Are you sure you want to sign out?\");\n\n    if (isSure) {\n      signOut();\n    }\n  };\n\n  return (\n    <Page title=\"Account\">\n      {currentUser && renderAccountFields(accountFields, true)}\n      <button className=\"btn btn-sign-out\" onClick={onUserSignOutClick}>\n        Sign out\n      </button>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { AppContext } from \"../contexts/AppContext\";\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => {\n  const { validateSignIn } = useContext(AuthContext);\n  const { mainUserRoute } = useContext(AppContext);\n\n  const loggedIn = validateSignIn();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loggedIn ? <Redirect to={mainUserRoute} /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default AuthRoute;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\nimport Page from \"./Page\";\nimport { loader } from \"../util/uiUtils\";\n\nconst UserPage = () => {\n  const { currentUser } = useContext(AuthContext);\n  const { drawSearchedRecipes } = useContext(RecipesContext);\n  const {\n    profileFields,\n    selectProfileField,\n    savedRecipes,\n    loading,\n  } = useContext(UserContext);\n\n  const displayName = currentUser ? currentUser.displayName : \"\";\n  const photoURL = currentUser ? currentUser.photoURL : \"\";\n\n  const populateProfileFields = () => {\n    let profileFieldElements = [];\n\n    profileFields.forEach((field) => {\n      let value = \"\";\n\n      switch (typeof field.value) {\n        case \"Array\": {\n          value = field.value.length;\n          break;\n        }\n        case \"object\": {\n          value = Object.keys(field.value).length;\n          break;\n        }\n        default: {\n          value = field.value;\n        }\n      }\n\n      profileFieldElements.push(\n        <li\n          className={`profile-field ${\n            field.active ? \"active-profile-field\" : \"\"\n          }`}\n          onClick={selectProfileField}\n          key={field.name}\n          name={field.name}\n        >\n          <p className=\"profile-field-value\">{value}</p>\n          <br />\n          <p className=\"profile-field-name\">{field.name}</p>\n        </li>\n      );\n    });\n\n    return <ul className=\"profile-fields\">{profileFieldElements}</ul>;\n  };\n\n  const savedRecipesContent = () => {\n    let content = \"\";\n\n    content = drawSearchedRecipes(savedRecipes, \"UserPage\");\n    return <React.Fragment>{content}</React.Fragment>;\n  };\n\n  const renderProfileContent = () => {\n    let activeField = \"\";\n\n    for (let i = 0; i < profileFields.length; i++) {\n      if (profileFields[i].active) {\n        activeField = profileFields[i].name;\n        break;\n      }\n    }\n\n    let content = \"\";\n\n    switch (activeField) {\n      case \"Saved Recipes\": {\n        content = savedRecipesContent();\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    return <div className=\"profile-content\">{content}</div>;\n  };\n\n  const profileBar = useRef(null);\n\n  useEffect(() => {\n    if (profileBar) {\n      if (profileBar.fireEvent) {\n        profileBar.fireEvent(\"onclick\");\n      } else {\n        const evObj = document.createEvent(\"Events\");\n        evObj.initEvent(\"click\", true, false);\n        setTimeout(() => {\n          if (profileBar.dispathEvent) {\n            profileBar.dispathEvent(evObj);\n          }\n        }, 300);\n      }\n    }\n  }, []);\n\n  return (\n    <Page>\n      <React.Fragment>\n        {loading ? (\n          loader\n        ) : (\n          <React.Fragment>\n            <img\n              src={photoURL}\n              alt=\"profile pic\"\n              width=\"125px\"\n              className=\"profile-pic\"\n            />\n            <br />\n            <h2>{`${displayName}`}</h2>\n            <div ref={profileBar} className=\"user-profile-bar\">\n              {populateProfileFields()}\n            </div>\n            {renderProfileContent()}\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Page>\n  );\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport Page from \"./Page\";\n\nconst Error404Page = () => {\n  return (\n    <Page>\n      <h1 className=\"error-404\">404</h1>\n      <h2 className=\"error-404-description\">\n        Woops...this page isn't available\n      </h2>\n      <h3>Cycle back to one of the other pages!</h3>\n    </Page>\n  );\n};\n\nexport default Error404Page;\n","import React, { Component } from \"react\";\nimport HomePage from \"../pages/HomePage\";\nimport SignInPage from \"../pages/SignInPage\";\nimport RecipesPage from \"../pages/RecipesPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport AuthRoute from \"../components/AuthRoute\";\nimport UserPage from \"../pages/UserPage\";\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport RecipeDetails from \"../pages/RecipeDetails\";\nimport Error404Page from \"../pages/Error404Page\";\nimport { Route, Switch } from \"react-router-dom\";\n\nexport const AppContext = React.createContext();\n\nclass AppContextProvider extends Component {\n  state = {\n    homePages: [\n      {\n        name: \"Sign In\",\n        component: SignInPage,\n        type: \"auth\",\n      },\n    ],\n    userPages: [\n      {\n        name: \"My CookCycle\",\n        component: UserPage,\n        type: \"private\",\n      },\n      {\n        name: \"Recipes\",\n        component: RecipesPage,\n        type: \"private\",\n      },\n      {\n        name: \"Account\",\n        component: AccountPage,\n        type: \"private\",\n      },\n    ],\n    navbarTypes: [\"homePage\", \"userPage\"],\n    mainUserRoute: \"/\",\n  };\n\n  UNSAFE_componentWillMount() {\n    const { homePages, userPages } = this.state;\n\n    homePages.forEach((page) => {\n      page.route = this.createRouteFromPageName(page.name);\n    });\n    userPages.forEach((page) => {\n      page.route = this.createRouteFromPageName(page.name);\n    });\n\n    this.setState({\n      homePages,\n      userPages,\n      mainUserRoute: userPages[0].route,\n    });\n  }\n\n  createRouteFromPageName = (pageName) => {\n    if (pageName === \"Home\") {\n      return \"/\";\n    } else {\n      return `/${pageName.replace(/\\s+/g, \"-\").toLowerCase()}`;\n    }\n  };\n\n  populateRoutes = () => {\n    let routes = [];\n\n    const addRoutesToArray = (pages) => {\n      pages.forEach((page, index) => {\n        const routePath = this.createRouteFromPageName(page.name);\n\n        if (page.type === \"auth\") {\n          routes.push(\n            <AuthRoute\n              key={page.name}\n              exact\n              path={routePath}\n              component={page.component}\n            />\n          );\n        } else if (page.type === \"private\") {\n          routes.push(\n            <PrivateRoute\n              key={page.name}\n              exact\n              path={routePath}\n              component={page.component}\n            />\n          );\n        }\n      });\n    };\n\n    addRoutesToArray(this.state.homePages);\n    addRoutesToArray(this.state.userPages);\n\n    return routes;\n  };\n\n  renderRouterSwitch = () => {\n    return (\n      <Switch>\n        <AuthRoute exact path=\"/\" component={HomePage} />\n        {this.populateRoutes()}\n        <PrivateRoute exact path=\"/recipe/:id\" component={RecipeDetails} />\n        <Route component={Error404Page} />\n      </Switch>\n    );\n  };\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n          ...this.state,\n          createRouteFromPageName: this.createRouteFromPageName,\n          renderRouterSwitch: this.renderRouterSwitch,\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default AppContextProvider;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { AppContext } from \"../contexts/AppContext\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n  const appContext = useContext(AppContext);\n\n  const burger = useRef(null);\n\n  const drawNavbar = () => {\n    let navbar = [];\n    const pages = appContext[`${props.type}s`];\n\n    pages.forEach((page, index) => {\n      if (page.name !== \"Home\") {\n        navbar.push(\n          <li className=\"navbar-item\" key={index}>\n            <NavLink\n              to={page.route}\n              className={`navbar-link ${\n                page.name === \"Sign In\" && \"navbar-link-sign-in\"\n              }`}\n              activeClassName=\"navbar-link-active\"\n              onClick={onBurgerClick}\n            >\n              <p>{page.name}</p>\n            </NavLink>\n          </li>\n        );\n      }\n    });\n    return navbar;\n  };\n\n  const onBurgerClick = (event) => {\n    // TOGGLE NAVBAR CONTENT\n    const navbarContent = document.querySelector(\".navbar-content\");\n    navbarContent.classList.toggle(\"navbar-active\");\n\n    // BURGER ANIMATION\n    const burger = document.querySelector(\".burger\");\n    if (burger) {\n      burger.classList.toggle(\"burger-toggle\");\n    }\n  };\n\n  // useEffect(() => {\n  //   if (window.innerWidth <= 800) {\n  //     const navbarContent = document.querySelector(\".navbar-content\");\n  //     if (navbarContent) {\n  //       navbarContent.style.height =\n  //         document.documentElement.scrollHeight.toString() + \"px\";\n  //     }\n  //   }\n  // }, [burger]);\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"logo-container\">\n        <NavLink\n          to={props.type === \"homePage\" ? \"/\" : appContext.mainUserRoute}\n        >\n          <img\n            className=\"navbar-item navbar-logo navbar-logo-img\"\n            alt=\"CookCycle\"\n          />\n        </NavLink>\n      </div>\n      <div className=\"navbar-content\">\n        <ul className=\"navbar-list\">{drawNavbar()}</ul>\n      </div>\n      <div ref={burger} className=\"burger\" onClick={onBurgerClick}>\n        <div className=\"burger-line1\"></div>\n        <div className=\"burger-line2\"></div>\n        <div className=\"burger-line3\"></div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>Copyright &copy; 2020, CookCycle. All Rights Reserved</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"./contexts/AppContext\";\nimport { AuthContext } from \"./contexts/AuthContext\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nconst CookCycle = (props) => {\n  const { renderRouterSwitch, navbarTypes } = useContext(AppContext);\n  const { validateSignIn } = useContext(AuthContext);\n\n  const loggedIn = validateSignIn();\n\n  const navbarType = loggedIn ? navbarTypes[1] : navbarTypes[0];\n\n  return (\n    <React.Fragment>\n      <Navbar type={navbarType} />\n      {renderRouterSwitch()}\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default CookCycle;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppContextProvider from \"./contexts/AppContext\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\nimport ReciepsContextProvider from \"./contexts/RecipesContext\";\nimport CookCycle from \"./CookCycle\";\nimport UserContextProvider from \"./contexts/UserContext\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <AppContextProvider>\n        <AuthContextProvider>\n          <UserContextProvider>\n            <ReciepsContextProvider>\n              <React.Fragment>\n                <CookCycle />\n              </React.Fragment>\n            </ReciepsContextProvider>\n          </UserContextProvider>\n        </AuthContextProvider>\n      </AppContextProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nserviceWorker.unregister();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}