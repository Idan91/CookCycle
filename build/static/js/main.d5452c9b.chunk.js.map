{"version":3,"sources":["images/google_G.svg","pages/HomePage.js","util/firebase.js","util/axios.js","util/fetch.js","contexts/AuthContext.js","pages/Page.js","pages/SignInPage.js","components/recipes/RecipeCard.js","contexts/UserContext.js","components/recipes/RecipeFocus.js","components/PrivateRoute.js","contexts/RecipesContext.js","components/recipes/IngredientButton.js","components/Autocomplete.js","components/recipes/IngredientSearch.js","util/uiUtils.js","pages/RecipesPage.js","pages/AccountPage.js","components/AuthRoute.js","pages/UserPage.js","contexts/AppContext.js","components/Navbar.js","components/Footer.js","CookCycle.js","contexts/AccountContext.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","Fragment","className","icon","faUtensils","faHeart","faShareSquare","to","activeClassName","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","axios","defaults","baseURL","Axios","cookcycleApiCall","methodType","apiCommand","a","requestBody","url","Promise","resolve","reject","method","toLowerCase","data","then","response","status","console","error","catch","err","AuthContext","React","createContext","AuthContextProvider","props","useState","isSignedIn","setIsSignedIn","firebaseIdToken","setFirebaseIdToken","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","user","signInWith","provider","signInWithPopup","result","token","credential","accessToken","updateLocalStorageUserData","userCredentials","email","displayName","providerData","post","username","errorMessage","message","window","alert","localStorage","setItem","JSON","stringify","Provider","value","facebookSignIn","facebookProvider","FacebookAuthProvider","useDeviceLanguage","googleSignIn","googleProvider","GoogleAuthProvider","signOut","validateSignIn","loggedIn","getItem","children","Page","title","withRouter","useContext","alt","onClick","faFacebookF","src","googleIcon","RecipeCard","saved","setSaved","RecipesContext","selectRecipe","toggleSaveRecipe","cardTitleRef","useRef","recipe","recipeId","numOfMissingIngredients","getTotalTime","parsedCookTime","parseInt","cookTime","split","parsedPrepTime","prepTime","isNaN","recipeid","event","recipeList","selectCallback","selectionSetter","faHeartSolid","img_url","ref","name","page","includes","faBalanceScale","difficulty","trim","faStopwatch","UserContext","UserContextProvider","userData","setUserData","loading","setLoading","recipeFocusVisible","setRecipeFocusVisible","recipesUpdated","setRecipesUpdated","selectedRecipe","setSelectedRecipe","savedRecipes","setSavedRecipes","length","active","profileFields","setProfileFields","userRecipes","forEach","push","recipeCount","currentProfileFields","field","newValue","newField","updateSavedRecipeField","selectProfileField","target","classList","parentNode","selectedField","getAttribute","updatedProfileFields","map","showRecipeFocus","hideRecipeFocus","RecipeFocus","isSaved","i","hideHandler","faAngleLeft","author","details","label","detailListItems","detail","index","key","drawRecipeDetials","ingredientsListItems","ingredientsInRecipe","ingredient","string","drawIngredients","instructionLines","instructions","line","period","displayRecipeInstructions","PrivateRoute","Component","component","rest","authenticated","render","ReciepsContextProvider","state","ingredientSearchInput","ingredientSuggestions","selectedIngredients","autocompleteResultLimit","recipeSearchResults","cursor","searchInitialized","recipeRoutes","addIngredient","setState","searchRecipes","removeIngredient","ingredientToRemove","newIngredients","filter","ingredientSearch","inputString","ingredients","require","suggestions","sortIngredientsInputFirst","input","first","others","indexOf","sort","concat","handleInputChange","populateSuggestions","ingredientCount","suggestion","selected","selectSuggestion","onMouseOver","add","onMouseLeave","remove","handleKeyDown","keyCode","preventDefault","prevState","Math","min","keyboardPressSuggestionSelection","mouseClickSuggestionSelection","recipeListSource","showFocusMethod","selectedRecipeId","addRecipeToFavorites","userEmail","requestData","log","context","removeRecipeFromFavorites","drawSearchedRecipes","selectCallbackMethod","selectionSetMethod","recipes","handleClick","saveMethod","id","setRecipeRoutes","addRecipeRoutesToArray","path","clearSearchResults","this","handleInputFocus","contextType","IngredientButton","faTimes","Autocomplete","IngredientSearch","htmlFor","type","placeholder","autoComplete","onChange","onKeyDown","faSearch","loader","RecipesPage","drawSelectedIngredients","Account","i_accountFields","fromCurrentUser","accountFieldToRender","renderAccountFields","confirm","AuthRoute","mainUserRoute","AppContext","UserPage","photoURL","width","profileFieldElements","Object","keys","populateProfileFields","activeField","content","savedRecipesContent","renderProfileContent","AppContextProvider","homePages","SignInPage","userPages","AccountPage","navbarTypes","createRouteFromPageName","pageName","replace","populateRoutes","routes","addRoutesToArray","pages","routePath","renderRouterSwitch","exact","route","Navbar","appContext","navbar","drawNavbar","Footer","CookCycle","navbarType","AccountContext","AccountContextProvider","App","basename","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5452c9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google_G.713f5b25.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUtensils,\n  faHeart,\n  faShareSquare,\n  // faAngleDoubleDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst HomePage = () => {\n  return (\n    <React.Fragment>\n      <div className=\"page home-page\">\n        <br />\n        <div className=\"content-container\">\n          <div className=\"illustration\"></div>\n          <div className=\"home-page-caption-container\">\n            <h1 className=\"home-page-caption\">Boost your cooking game</h1>\n            <br />\n            <h3 className=\"home-page-caption-subtitle\">\n              Find amazing recipes for the ingredients you have left at home\n            </h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-page-desc desc-1\">\n        <br />\n        <br />\n        <div className=\"centered-container desc-content\">\n          <h2 className=\"desc-title desc-title-1\">\n            Take home-cooking to the next level\n          </h2>\n          <div className=\"flex-container\">\n            <div className=\"flex-item desc-1-item\">\n              <FontAwesomeIcon icon={faUtensils} className=\"desc-1-item-icon\" />\n              <p className=\"desc-1-item-text\">Explore great meal options</p>\n            </div>\n            <div className=\"flex-item desc-1-item\">\n              <FontAwesomeIcon icon={faHeart} className=\"desc-1-item-icon\" />\n              <p className=\"desc-1-item-text\">Save your favorites</p>\n            </div>\n            <div className=\"flex-item desc-1-item\">\n              <FontAwesomeIcon\n                icon={faShareSquare}\n                className=\"desc-1-item-icon\"\n              />\n              <p className=\"desc-1-item-text\">Share your own recipes</p>\n            </div>\n          </div>\n          <br />\n          <div className=\"desc-1-bottom-text\">\n            <h3>Your all-in-one recipe app</h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-page-desc desc-join\">\n        <br />\n        <br />\n        <br />\n        <br />\n        <div className=\"centered-container\">\n          <h2 className=\"desc-title desc-join-title\">\n            Join CookCycle for <span className=\"word-highlight\">FREE</span> now!\n          </h2>\n          <br />\n          <div className=\"navbar-item\">\n            <NavLink\n              to=\"/sign-in\"\n              className=\"navbar-link navbar-link-sign-in sign-in-home-page\"\n              activeClassName=\"navbar-link-active\"\n            >\n              <p>Sign In</p>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport const app = firebase.initializeApp(firebaseConfig);\n\n// export const admin = require(\"firebase-admin\");\n\n// admin.initializeApp();\n\nexport default { app };\n","import axios from \"axios\";\n\naxios.defaults.baseURL =\n  \"https://europe-west3-cookcycle-2e4a5.cloudfunctions.net/api\";\n\nexport const Axios = axios;\n\nexport default Axios;\n","import Axios from \"../util/axios\";\n\nconst baseURL = process.env.REACT_APP_COOKCYCLE_API_BASEURL;\n\nexport const cookcycleApiCall = async (\n  methodType,\n  apiCommand,\n  requestBody = {}\n) => {\n  const url = `${baseURL}${apiCommand}`;\n\n  // console.log(url, requestBody);\n\n  return await new Promise((resolve, reject) => {\n    try {\n      Axios({\n        method: methodType.toLowerCase(),\n        url,\n        data: requestBody,\n      })\n        .then((response) => {\n          if (response.status >= 200 && response.status < 300) {\n            // console.log(response);\n            resolve({ data: response.data, status: response.status });\n          } else if (response.status === 401) {\n            console.error(\n              `Error 401, apiCommand: ${apiCommand} ${\n                requestBody !== {} && `requestBody: ${requestBody}`\n              }`\n            );\n            reject(\"Unauthenticated\");\n          } else if (response.status === 500) {\n            // console.log(response);\n\n            console.error(\n              `Error 500, apiCommand: ${apiCommand} ${\n                requestBody !== {} && `requestBody: ${requestBody}`\n              }`\n            );\n            reject(\"Server error!\");\n          }\n        })\n        .catch((err) => {\n          console.error(\n            `Error, apiCommand: ${apiCommand} ${\n              requestBody !== {} && `requestBody: ${requestBody}`\n            }`\n          );\n          reject(err);\n        });\n    } catch (err) {\n      console.error(err);\n      reject(err);\n    }\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { app } from \"../util/firebase\";\nimport Axios from \"../util/axios\";\nimport { cookcycleApiCall } from \"../util/fetch\";\n\nexport const AuthContext = React.createContext();\n\nconst AuthContextProvider = (props) => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [firebaseIdToken, setFirebaseIdToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setIsSignedIn(!!user);\n    });\n  });\n\n  const validateSignIn = () => {\n    const loggedIn =\n      currentUser ||\n      localStorage.getItem(\"currentUser\") ||\n      firebaseIdToken ||\n      localStorage.getItem(\"firebaseIdToken\");\n\n    return loggedIn !== null && loggedIn !== \"null\";\n  };\n\n  const facebookSignIn = () => {\n    let facebookProvider = new firebase.auth.FacebookAuthProvider();\n    app.auth().useDeviceLanguage();\n\n    return signInWith(facebookProvider);\n  };\n\n  const googleSignIn = () => {\n    var googleProvider = new firebase.auth.GoogleAuthProvider();\n\n    return signInWith(googleProvider);\n  };\n\n  const signInWith = (provider) => {\n    app\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = `Bearer ${result.credential.accessToken}`;\n        setFirebaseIdToken(token);\n        // The signed-in user info.\n        var user = result.user;\n        setCurrentUser(user);\n        updateLocalStorageUserData(user, token);\n\n        const userCredentials = {\n          email: user.email,\n          displayName: user.displayName,\n          providerData: user.providerData,\n        };\n\n        Axios.post(\"/register-user\", userCredentials)\n          .then((response) => {\n            // console.log(response);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n\n        if (userCredentials.email) {\n          const requestBody = {\n            username: userCredentials.email,\n          };\n\n          cookcycleApiCall(\"post\", \"user/add\", requestBody)\n            .then((response) => {\n              if (response.data) {\n                // console.log(response.data);\n              }\n            })\n            .catch((err) => {\n              console.error(err);\n            });\n        }\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        console.error(error);\n        // var errorCode = error.code;\n        var errorMessage = error.message;\n\n        // The email of the user's account used.\n        // var email = error.email;\n\n        // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        window.alert(errorMessage);\n        // ...\n      });\n  };\n\n  const signOut = () => {\n    app\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n        setFirebaseIdToken(null);\n        setCurrentUser(null);\n        updateLocalStorageUserData(null, null);\n        window.alert(\"Sign out successful!\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.error(error);\n      });\n  };\n\n  const updateLocalStorageUserData = (user, token) => {\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    localStorage.setItem(\"firebaseIdToken\", token);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isSignedIn,\n        facebookSignIn,\n        googleSignIn,\n        currentUser,\n        signOut,\n        validateSignIn,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n","import React from \"react\";\n\nconst Page = (props) => {\n  return (\n    <React.Fragment>\n      <div className=\"page\">\n        <div className=\"content-container\">\n          <div className=\"centered-container\">\n            {props.title && (\n              <React.Fragment>\n                <br />\n                <h2>{props.title}</h2>\n              </React.Fragment>\n            )}\n            <br />\n            {props.children}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\nimport googleIcon from \"../images/google_G.svg\";\nimport Page from \"./Page\";\n\nconst SignInPage = () => {\n  const { facebookSignIn, googleSignIn } = useContext(AuthContext);\n\n  const renderSignInMethodButtons = () => {\n    return (\n      <React.Fragment>\n        <button\n          className=\"btn btn-sign-in2 btn-facebook link\"\n          onClick={facebookSignIn}\n        >\n          <FontAwesomeIcon icon={faFacebookF} className=\"facebook-icon\" />\n          &emsp;Sign in with Facebook\n        </button>\n        <br />\n        <button\n          className=\"btn btn-sign-in2 btn-google link\"\n          onClick={googleSignIn}\n        >\n          <img src={googleIcon} alt=\"\" className=\"google-icon\" />\n          &emsp;Sign in with Google\n        </button>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    // <div className=\"page\">\n    //   <br />\n    //   <div className=\"content-container\">\n    //     <div className=\"centered-container\">\n    //       <div className=\"signin-logo-img\">\n    //         <img className=\"\" alt=\"CookCycle\" />\n    //       </div>\n    //       <br />\n    //       <br />\n    //       <br />\n    //       {renderSignInMethodButtons()}\n    //     </div>\n    //   </div>\n    // </div>\n    <Page>\n      <div className=\"signin-logo-img\">\n        <img className=\"\" alt=\"CookCycle\" />\n      </div>\n      <br />\n      <br />\n      <br />\n      {renderSignInMethodButtons()}\n    </Page>\n  );\n};\n\nexport default withRouter(SignInPage);\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart as faHeartSolid,\n  faStopwatch,\n  faBalanceScale,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nconst RecipeCard = (props) => {\n  const [saved, setSaved] = useState(props.saved);\n  const { selectRecipe, toggleSaveRecipe } = useContext(RecipesContext);\n\n  const { currentUser } = useContext(AuthContext);\n  const cardTitleRef = useRef(null);\n\n  useEffect(() => {\n    setSaved(props.saved);\n  }, [props.saved]);\n\n  const { recipe, recipeId, numOfMissingIngredients } = props.recipe;\n\n  const getTotalTime = () => {\n    const parsedCookTime = parseInt(recipe.cookTime.split(\" \")[0]);\n    const parsedPrepTime = parseInt(recipe.prepTime.split(\" \")[0]);\n\n    const cookTime = isNaN(parsedCookTime) ? 0 : parsedCookTime;\n    const prepTime = isNaN(parsedPrepTime) ? 0 : parsedPrepTime;\n\n    return cookTime + prepTime;\n  };\n\n  return (\n    <div\n      className=\"recipe-card card-appearance\"\n      recipeid={recipeId}\n      onClick={(event) =>\n        selectRecipe(\n          event,\n          props.recipeList,\n          props.selectCallback,\n          props.selectionSetter\n        )\n      }\n    >\n      <div\n        className=\"save-recipe\"\n        onClick={() => toggleSaveRecipe(recipeId, currentUser, saved, setSaved)}\n      >\n        <FontAwesomeIcon\n          className=\"save-recipe-icon\"\n          icon={saved ? faHeartSolid : faHeart}\n        />\n      </div>\n      {/* <img src={carbonara} alt=\"\" className=\"recipe-card-img\" /> */}\n      <img src={recipe.img_url} alt=\"\" className=\"recipe-card-img\" />\n      <div className=\"recipe-card-detail-container\">\n        <div className=\"recipe-card-details\">\n          <div ref={cardTitleRef} className=\"recipe-card-title\">\n            <p>{recipe.name}</p>\n          </div>\n          {!props.page.toLowerCase().includes(\"user\") && (\n            <React.Fragment>\n              <p className=\"recipe-bottom-item recipe-card-missing-ingredients\">\n                {numOfMissingIngredients}\n                &nbsp;missing ingredient{numOfMissingIngredients !== 1 && \"s\"}\n              </p>\n            </React.Fragment>\n          )}\n          <div className=\"recipe-detials-bottom-row\">\n            <p className=\"recipe-bottom-item recipe-card-difficulty\">\n              <FontAwesomeIcon\n                className=\"recipe-details-icon\"\n                icon={faBalanceScale}\n              />{\" \"}\n              &nbsp;\n              {recipe.difficulty.trim()}\n            </p>\n            <p className=\"recipe-bottom-item recipe-card-total-time\">\n              <FontAwesomeIcon\n                className=\"recipe-details-icon\"\n                icon={faStopwatch}\n              />{\" \"}\n              &nbsp;\n              {/* {getTotalTime()}&nbsp;mins */}\n              {getTotalTime() > 0 ? (\n                <span>{getTotalTime()}&nbsp;mins</span>\n              ) : (\n                <span>N/A</span>\n              )}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"../util/axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { cookcycleApiCall } from \"../util/fetch\";\n\nexport const UserContext = React.createContext();\n\nconst UserContextProvider = (props) => {\n  const { isSignedIn, currentUser } = useContext(AuthContext);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [recipeFocusVisible, setRecipeFocusVisible] = useState(false);\n\n  const [recipesUpdated, setRecipesUpdated] = useState(false);\n  const [selectedRecipe, setSelectedRecipe] = useState({});\n  const [savedRecipes, setSavedRecipes] = useState([]);\n\n  const [profileFields, setProfileFields] = useState([\n    {\n      name: \"Saved Recipes\",\n      value: savedRecipes.length,\n      active: true,\n    },\n    // {\n    //   name: \"Allergies\",\n    //   value: [],\n    //   active: false,\n    // },\n  ]);\n\n  const showRecipeFocus = () => {\n    setRecipeFocusVisible(true);\n  };\n\n  const hideRecipeFocus = () => {\n    setRecipeFocusVisible(false);\n  };\n\n  const selectProfileField = (event) => {\n    let { target } = event;\n\n    while (!target.classList.value.includes(\"profile-field \")) {\n      target = target.parentNode;\n    }\n    const selectedField = target.getAttribute(\"name\");\n\n    const updatedProfileFields = profileFields.map((field) => {\n      if (field.name === selectedField) {\n        field.active = true;\n      } else {\n        field.active = false;\n      }\n      return field;\n    });\n\n    // console.log(updatedProfileFields);\n\n    setProfileFields(updatedProfileFields);\n  };\n\n  const updateSavedRecipeField = (recipeCount) => {\n    let currentProfileFields = [];\n\n    profileFields.forEach((field) => {\n      let newValue = field.value;\n\n      if (field.name === \"Saved Recipes\") {\n        newValue = recipeCount;\n      }\n\n      let newField = {\n        name: field.name,\n        value: newValue,\n        active: field.active,\n      };\n\n      currentProfileFields.push(newField);\n    });\n\n    setProfileFields(currentProfileFields);\n  };\n\n  useEffect(() => {\n    // console.log(currentUser);\n    setLoading(true);\n\n    if (currentUser || isSignedIn) {\n      try {\n        cookcycleApiCall(\"post\", \"user/getfavoritesbyusername\", {\n          username: currentUser.email,\n        })\n          .then((response) => {\n            if (response.data) {\n              let userRecipes = [];\n\n              response.data.forEach((result) => {\n                cookcycleApiCall(\"get\", `recipe/getbyid/${result.recipeId}`)\n                  .then((response) => {\n                    userRecipes.push({\n                      recipeId: result.recipeId,\n                      numOfMissingIngredients: 0,\n                      recipe: response.data,\n                    });\n                  })\n                  .catch((err) => {\n                    console.error(err);\n                  });\n              });\n\n              setSavedRecipes(userRecipes);\n              updateSavedRecipeField(response.data.length);\n              setRecipesUpdated(false);\n              setLoading(false);\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n            setLoading(false);\n          });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [currentUser, isSignedIn, recipesUpdated]);\n\n  useEffect(() => {\n    if (isSignedIn && currentUser) {\n      if (!userData) {\n        Axios.post(\"/user/data\", { email: currentUser.email })\n          .then((response) => {\n            if (response.status >= 200 && response.status < 300) {\n              setUserData(response.data);\n            } else {\n              console.error(\n                `Error ${response.status}\n                }`\n              );\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    }\n  }, [isSignedIn, currentUser, userData]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        userData,\n        profileFields,\n        selectProfileField,\n        savedRecipes,\n        showRecipeFocus,\n        hideRecipeFocus,\n        recipeFocusVisible,\n        selectedRecipe,\n        setSelectedRecipe,\n        setRecipesUpdated,\n        loading,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Page from \"../../pages/Page\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleLeft,\n  faHeart as faHeartSolid,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { UserContext } from \"../../contexts/UserContext\";\n\nconst RecipeFocus = (props) => {\n  const { recipe, recipeId } = props.recipe;\n\n  const { toggleSaveRecipe } = useContext(RecipesContext);\n  const { currentUser } = useContext(AuthContext);\n  const { savedRecipes, recipesUpdated } = useContext(UserContext);\n\n  const [saved, setSaved] = useState(props.saved);\n\n  useEffect(() => {\n    let isSaved = false;\n\n    for (let i = 0; i < savedRecipes.length; i++) {\n      if (savedRecipes[i].recipeId === recipeId) {\n        isSaved = true;\n        break;\n      }\n    }\n\n    setSaved(isSaved);\n  }, [recipesUpdated, recipeId, savedRecipes]);\n\n  const drawIngredients = () => {\n    let ingredientsListItems = [];\n\n    recipe.ingredientsInRecipe.forEach((ingredient, index) => {\n      ingredientsListItems.push(<li key={index}>{ingredient.string}</li>);\n    });\n\n    return (\n      <ul className=\"recipe-focus-ingredient-list\">{ingredientsListItems}</ul>\n    );\n  };\n\n  const drawRecipeDetials = () => {\n    const details = [\n      {\n        name: \"servings\",\n        label: \"Servings\",\n      },\n      {\n        name: \"prepTime\",\n        label: \"Prep time\",\n      },\n      {\n        name: \"cookTime\",\n        label: \"Cook time\",\n      },\n      {\n        name: \"difficulty\",\n        label: \"Difficulty\",\n      },\n    ];\n\n    let detailListItems = [];\n\n    details.forEach((detail, index) => {\n      if (recipe[detail.name] && recipe[detail.name].trim() !== \"\") {\n        let { label } = detail;\n        let value = detail.value || recipe[detail.name];\n\n        if (detail.name === \"servings\") {\n          detailListItems.push(<li key={label}>{value}</li>);\n        } else {\n          detailListItems.push(\n            <li key={label}>\n              {label}:&ensp;{value}\n            </li>\n          );\n        }\n        if (index < details.length - 1) {\n          detailListItems.push(<li key={index}>|</li>);\n        }\n      }\n    });\n\n    return <ul>{detailListItems}</ul>;\n  };\n\n  const displayRecipeInstructions = () => {\n    const instructionLines = recipe.method.split(\". \");\n    let instructions = [];\n\n    instructionLines.forEach((line, index) => {\n      if (line.trim() !== \"\" && line.trim() !== \".\") {\n        let period = \".\";\n\n        if (index === instructionLines.length - 1) {\n          period = \"\";\n        }\n\n        instructions.push(\n          <li key={index}>\n            <p>{`${line.trim()}${period}`}</p>\n          </li>\n        );\n      }\n    });\n\n    return <ul className=\"recipe-instructions\">{instructions}</ul>;\n  };\n\n  return (\n    <Page>\n      <button className=\"btn back-btn\" onClick={props.hideHandler}>\n        <FontAwesomeIcon icon={faAngleLeft} /> Back\n      </button>\n      <div\n        className=\"save-recipe save-recipe-focus\"\n        onClick={() => toggleSaveRecipe(recipeId, currentUser, saved, setSaved)}\n      >\n        <FontAwesomeIcon\n          className=\"save-recipe-icon\"\n          icon={saved ? faHeartSolid : faHeart}\n        />\n      </div>\n      <div className=\"recipe-focus-container\">\n        <h1>{recipe.name}</h1>\n        {recipe.author && (\n          <h4 className=\"recipe-author\">Author:&ensp;{recipe.author}</h4>\n        )}\n        <img\n          src={recipe.img_url}\n          className=\"recipe-focus-img\"\n          alt={recipe.name}\n        />\n        <br />\n        <div className=\"recipe-focus-details\">{drawRecipeDetials()}</div>\n        <br />\n        <h3>Ingredients</h3>\n        <div className=\"recipe-focus-section-container\">\n          {drawIngredients()}\n        </div>\n        <br />\n        <h3>Instructions</h3>\n        {/* <p className=\"recipe-instructions\">{recipe.method}</p> */}\n        <div className=\"recipe-focus-section-container\">\n          {displayRecipeInstructions()}\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default RecipeFocus;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => {\n  const { validateSignIn } = useContext(AuthContext);\n\n  const loggedIn = validateSignIn();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        // !currentUser ? <Redirect to=\"/sign-in\" /> : <Component {...props} />\n        !loggedIn ? <Redirect to=\"/sign-in\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport { cookcycleApiCall } from \"../util/fetch\";\nimport RecipeCard from \"../components/recipes/RecipeCard\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport RecipeFocus from \"../components/recipes/RecipeFocus\";\nimport PrivateRoute from \"../components/PrivateRoute\";\n\nexport const RecipesContext = React.createContext();\n\nclass ReciepsContextProvider extends Component {\n  state = {\n    ingredientSearchInput: \"\",\n    ingredientSuggestions: [],\n    selectedIngredients: [],\n    autocompleteResultLimit: 5,\n    recipeSearchResults: [],\n    cursor: -1,\n    recipeFocusVisible: false,\n    selectedRecipe: \"\",\n    loading: false,\n    searchInitialized: false,\n    recipeRoutes: [],\n  };\n\n  static contextType = UserContext;\n\n  addIngredient = (ingredient) => {\n    let { selectedIngredients } = this.state;\n\n    selectedIngredients.push(ingredient);\n\n    this.setState({\n      selectedIngredients,\n    });\n  };\n\n  searchRecipes = () => {\n    const { selectedIngredients } = this.state;\n\n    this.setState({\n      recipeSearchResults: [],\n      loading: true,\n      searchInitialized: true,\n    });\n\n    cookcycleApiCall(\"post\", \"recipe/getavailablerecipes\", selectedIngredients)\n      .then((response) => {\n        if (response.data) {\n          this.setState({\n            recipeSearchResults: response.data,\n            loading: false,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  removeIngredient = (event) => {\n    const { selectedIngredients } = this.state;\n\n    const ingredientToRemove = event.target.name;\n\n    const newIngredients = selectedIngredients.filter((ingredient) => {\n      return ingredient !== ingredientToRemove;\n    });\n\n    this.setState({\n      selectedIngredients: newIngredients,\n    });\n  };\n\n  ingredientSearch = (inputString) => {\n    if (inputString.length > 0) {\n      const ingredients = require(\"../data/ingredientList.json\");\n\n      inputString = inputString.toLowerCase();\n\n      let suggestions = ingredients.filter((ingredient) => {\n        return ingredient.name.includes(inputString);\n      });\n\n      suggestions = this.sortIngredientsInputFirst(inputString, suggestions);\n\n      if (suggestions.length === 0) {\n        this.setState({\n          ingredientSuggestions: [],\n        });\n      } else {\n        this.setState({\n          ingredientSuggestions: suggestions,\n        });\n      }\n    }\n  };\n\n  sortIngredientsInputFirst = (input, data) => {\n    var first = [];\n    var others = [];\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].name.indexOf(input) === 0) {\n        first.push(data[i]);\n      } else {\n        others.push(data[i]);\n      }\n    }\n    first.sort();\n    others.sort();\n    return first.concat(others);\n  };\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      ingredientSearchInput: value,\n      cursor: -1,\n    });\n\n    if (value === \"\") {\n      this.setState({\n        ingredientSuggestions: [],\n      });\n    } else {\n      this.ingredientSearch(value);\n    }\n  };\n\n  populateSuggestions = () => {\n    const { ingredientSuggestions, cursor, selectedIngredients } = this.state;\n\n    let suggestions = [];\n\n    let ingredientCount = 0;\n    ingredientSuggestions.forEach((suggestion, index) => {\n      if (ingredientCount < this.state.autocompleteResultLimit) {\n        let selected = false;\n        for (let i = 0; i < selectedIngredients.length; i++) {\n          if (selectedIngredients[i] === suggestion.name) {\n            selected = true;\n            break;\n          }\n        }\n\n        if (!selected) {\n          suggestions.push(\n            <li\n              className={`suggestion ${\n                cursor === index ? \"suggetion-active\" : \"\"\n              }`}\n              key={index}\n              value={suggestion.name}\n              onClick={this.selectSuggestion}\n              onMouseOver={(event) => {\n                event.target.classList.add(\"suggetion-active\");\n                if (cursor > -1) {\n                  this.setState({\n                    cursor: -1,\n                  });\n                }\n              }}\n              onMouseLeave={(event) => {\n                event.target.classList.remove(\"suggetion-active\");\n              }}\n            >\n              {suggestion.name}\n            </li>\n          );\n          ingredientCount++;\n        }\n      }\n    });\n\n    return suggestions;\n  };\n\n  handleKeyDown = (event) => {\n    const { cursor, ingredientSuggestions } = this.state;\n    const { keyCode } = event;\n\n    switch (keyCode) {\n      case 38: {\n        event.preventDefault();\n        // Up arrow\n        if (cursor > 0) {\n          this.setState((prevState) => ({\n            cursor: prevState.cursor - 1,\n          }));\n        }\n        break;\n      }\n      case 40: {\n        // Down arrow\n        const limit =\n          Math.min(\n            this.state.autocompleteResultLimit,\n            ingredientSuggestions.length\n          ) - 1;\n        if (cursor < limit) {\n          this.setState((prevState) => ({\n            cursor: prevState.cursor + 1,\n          }));\n        }\n        break;\n      }\n      case 13:\n      // Enter/Return\n      /* falls through */\n      case 9: {\n        // Tab\n        if (ingredientSuggestions.length > 0) {\n          event.preventDefault();\n          if (keyCode === 9 && cursor === -1) {\n            this.setState((prevState) => ({\n              cursor: prevState.cursor + 1,\n            }));\n          } else {\n            this.selectSuggestion(event);\n          }\n        }\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  };\n\n  selectSuggestion = (event) => {\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      this.keyboardPressSuggestionSelection();\n    } else {\n      this.mouseClickSuggestionSelection(event);\n    }\n\n    this.setState((prevState) => ({\n      cursor: -1,\n      ingredientSearchInput: \"\",\n      ingredientSuggestions: [],\n    }));\n  };\n\n  keyboardPressSuggestionSelection = () => {\n    const { cursor } = this.state;\n    let suggestion;\n\n    try {\n      suggestion = this.state.ingredientSuggestions[cursor];\n\n      this.addIngredient(suggestion.name);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  mouseClickSuggestionSelection = (event) => {\n    const ingredient = event.target.getAttribute(\"value\");\n\n    try {\n      this.addIngredient(ingredient);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  selectRecipe = (\n    event,\n    recipeListSource,\n    showFocusMethod,\n    selectionSetter\n  ) => {\n    let { target } = event;\n\n    try {\n      while (\n        !target.classList.value.includes(\"recipe-card \") &&\n        target.classList.value !== \"save-recipe\"\n      ) {\n        target = target.parentNode;\n      }\n\n      if (target.classList.value !== \"save-recipe\") {\n        const selectedRecipeId = parseInt(target.getAttribute(\"recipeid\"));\n\n        // const { recipeSearchResults } = this.state;\n\n        for (let i = 0; i < recipeListSource.length; i++) {\n          if (recipeListSource[i].recipeId === selectedRecipeId) {\n            selectionSetter(recipeListSource[i]);\n            showFocusMethod();\n            break;\n          }\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  setSelectedRecipe = (selectedRecipe) => {\n    this.setState({\n      selectedRecipe,\n    });\n  };\n\n  showRecipeFocus = () => {\n    this.setState({\n      recipeFocusVisible: true,\n    });\n  };\n\n  hideRecipeFocus = () => {\n    this.setState({\n      recipeFocusVisible: false,\n    });\n  };\n\n  addRecipeToFavorites = async (recipeId, userEmail) => {\n    const requestData = { username: userEmail, recipeId: recipeId };\n\n    return new Promise((resolve, reject) => {\n      try {\n        cookcycleApiCall(\"post\", \"favorite/add\", requestData)\n          .then((result) => {\n            console.log(result);\n            this.context.setRecipesUpdated(true);\n            resolve(result);\n          })\n          .catch((err) => {\n            console.error(err);\n            reject(\"Error adding recipe to favorites\");\n          });\n      } catch (err) {\n        reject(\"Error adding recipe to favorites\");\n      }\n    });\n  };\n\n  removeRecipeFromFavorites = async (recipeId, userEmail) => {\n    const requestData = { user: userEmail, recipeId: recipeId };\n\n    return new Promise((resolve, reject) => {\n      try {\n        cookcycleApiCall(\"post\", \"favorite/delete\", requestData)\n          .then((result) => {\n            console.log(result);\n            this.context.setRecipesUpdated(true);\n            resolve(result);\n          })\n          .catch((err) => {\n            console.error(err);\n            reject(\"Error removing recipe from favorites\");\n          });\n      } catch (err) {\n        console.error(err);\n        reject(\"Error removing recipe from favorites\");\n      }\n    });\n  };\n\n  drawSearchedRecipes = (\n    recipeList,\n    selectCallbackMethod,\n    selectionSetMethod,\n    page = \"\"\n  ) => {\n    const { savedRecipes } = this.context;\n\n    const recipes = recipeList.map((recipe, index) => {\n      let isSaved = false;\n\n      savedRecipes.forEach((saved) => {\n        if (saved.recipeId === recipe.recipeId) {\n          isSaved = true;\n        }\n      });\n\n      return (\n        <RecipeCard\n          key={index}\n          recipe={recipe}\n          handleClick={this.selectRecipe}\n          selectionSetter={selectionSetMethod}\n          saved={isSaved}\n          selectCallback={selectCallbackMethod}\n          recipeList={recipeList}\n          page={page}\n        />\n      );\n    });\n\n    if (recipes.length > 0) {\n      return recipes;\n    } else {\n      if (this.state.searchInitialized) {\n        return <p className=\"no-recipes-msg\">No recipes found</p>;\n      }\n    }\n  };\n\n  toggleSaveRecipe = async (recipeId, currentUser, isSaved, saveMethod) => {\n    if (!isSaved) {\n      saveMethod(true);\n\n      await this.addRecipeToFavorites(recipeId, currentUser.email)\n        .then((response) => {\n          console.log(response);\n\n          if (\n            response.status >= 200 &&\n            response.status < 300 &&\n            response.data.id\n          ) {\n            // Do Nothing\n          } else {\n            saveMethod(false);\n            window.alert(\"Error adding recipe to favorites\");\n          }\n        })\n        .catch((err) => {\n          window.alert(\"Error adding recipe to favorites\");\n          console.error(err);\n        });\n    } else {\n      saveMethod(false);\n\n      await this.removeRecipeFromFavorites(recipeId, currentUser.email)\n        .then((response) => {\n          console.log(response);\n\n          if (response.status >= 200 && response.status < 300) {\n            // Do Nothing\n          } else {\n            saveMethod(true);\n            window.alert(\"Error removing recipe to favorites\");\n          }\n        })\n        .catch((err) => {\n          window.alert(\"Error removing recipe to favorites\");\n          console.error(err);\n        });\n    }\n  };\n\n  setRecipeRoutes = () => {\n    const { savedRecipes } = this.context;\n    const { recipeSearchResults } = this.state;\n\n    let recipeRoutes = [];\n\n    const addRecipeRoutesToArray = (recipeList) => {\n      recipeList.forEach((recipe) => {\n        recipeRoutes.push(\n          <PrivateRoute\n            key={recipe.recipe.name}\n            path={`/recipe/:recipeId`}\n            component={<RecipeFocus recipe={recipe} />}\n          />\n        );\n      });\n    };\n\n    addRecipeRoutesToArray(savedRecipes);\n    addRecipeRoutesToArray(recipeSearchResults);\n\n    this.setState({\n      recipeRoutes,\n    });\n  };\n\n  clearSearchResults = () => {\n    this.setState({\n      recipeSearchResults: [],\n      searchInitialized: false,\n    });\n  };\n\n  render() {\n    return (\n      <RecipesContext.Provider\n        value={{\n          ...this.state,\n          populateSuggestions: this.populateSuggestions,\n          drawSearchedRecipes: this.drawSearchedRecipes,\n          addIngredient: this.addIngredient,\n          removeIngredient: this.removeIngredient,\n          handleInputChange: this.handleInputChange,\n          handleInputFocus: this.handleInputFocus,\n          handleKeyDown: this.handleKeyDown,\n          selectSuggestion: this.selectSuggestion,\n          searchRecipes: this.searchRecipes,\n          selectRecipe: this.selectRecipe,\n          addRecipeToFavorites: this.addRecipeToFavorites,\n          removeRecipeFromFavorites: this.removeRecipeFromFavorites,\n          showRecipeFocus: this.showRecipeFocus,\n          hideRecipeFocus: this.hideRecipeFocus,\n          setSelectedRecipe: this.setSelectedRecipe,\n          toggleSaveRecipe: this.toggleSaveRecipe,\n          setRecipeRoutes: this.setRecipeRoutes,\n          clearSearchResults: this.clearSearchResults,\n        }}\n      >\n        {this.props.children}\n      </RecipesContext.Provider>\n    );\n  }\n}\n\nexport default ReciepsContextProvider;\n","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\n\nconst IngredientButton = (props) => {\n  const { removeIngredient } = useContext(RecipesContext);\n\n  return (\n    <button\n      className=\"ingredient\"\n      name={props.ingredient}\n      onClick={removeIngredient}\n    >\n      {props.ingredient}&ensp;\n      <FontAwesomeIcon icon={faTimes} className=\"ingredient-x\" />\n    </button>\n  );\n};\n\nexport default IngredientButton;\n","import React, { useContext } from \"react\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\n\nconst Autocomplete = () => {\n  const {\n    populateSuggestions,\n    ingredientSuggestions,\n    autocompleteResultLimit,\n  } = useContext(RecipesContext);\n\n  return (\n    <div className=\"autocomplete\">\n      <div className=\"suggestions\">\n        <ul>\n          {populateSuggestions()}\n          {ingredientSuggestions.length > autocompleteResultLimit && (\n            <li className=\"more-results\">\n              Continue typing for more results...\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { RecipesContext } from \"../../contexts/RecipesContext\";\nimport Autocomplete from \"../Autocomplete\";\n\nconst IngredientSearch = () => {\n  const {\n    ingredientSearchInput,\n    ingredientSuggestions,\n    handleInputChange,\n    handleKeyDown,\n  } = useContext(RecipesContext);\n\n  return (\n    <div className=\"search-bar\">\n      <label className=\"search-label\" htmlFor=\"search-ingredient\">\n        <input\n          type=\"text\"\n          id=\"search-ingredient\"\n          placeholder=\"Search ingredients...\"\n          autoComplete=\"off\"\n          value={ingredientSearchInput}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        />\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n      </label>\n      {ingredientSuggestions.length > 0 && <Autocomplete />}\n    </div>\n  );\n};\n\nexport default IngredientSearch;\n","import React from \"react\";\n\nexport const loader = (\n  <div id=\"preloader\">\n    <div id=\"loader\"></div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport IngredientButton from \"../components/recipes/IngredientButton\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\nimport IngredientSearch from \"../components/recipes/IngredientSearch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport Page from \"./Page\";\nimport RecipeFocus from \"../components/recipes/RecipeFocus\";\nimport { loader } from \"../util/uiUtils\";\n\nconst RecipesPage = () => {\n  const {\n    selectedIngredients,\n    searchRecipes,\n    drawSearchedRecipes,\n    recipeSearchResults,\n    recipeFocusVisible,\n    selectedRecipe,\n    showRecipeFocus,\n    hideRecipeFocus,\n    setSelectedRecipe,\n    loading,\n    clearSearchResults,\n  } = useContext(RecipesContext);\n\n  const drawSelectedIngredients = () => {\n    let ingredients = [];\n\n    selectedIngredients.forEach((ingredient, index) => {\n      ingredients.push(\n        <li key={index}>\n          <IngredientButton ingredient={ingredient} />\n        </li>\n      );\n    });\n\n    return <ul className=\"selected-ingredients\">{ingredients}</ul>;\n  };\n\n  return (\n    <React.Fragment>\n      {recipeFocusVisible ? (\n        <RecipeFocus recipe={selectedRecipe} hideHandler={hideRecipeFocus} />\n      ) : (\n        <Page>\n          <div className=\"grid-item ingerdients\">\n            <div className=\"ingredient-container\">\n              <h2 className=\"page-subheader\">Ingredients</h2>\n              <IngredientSearch />\n              {selectedIngredients.length > 0 && (\n                <button\n                  className=\"btn btn-recipe-search\"\n                  onClick={searchRecipes}\n                >\n                  Search Recipes&ensp;\n                  <FontAwesomeIcon icon={faSearch} />\n                </button>\n              )}\n              <br />\n              {drawSelectedIngredients()}\n            </div>\n          </div>\n          <div className=\"grid-item recipes\">\n            <div className=\"card-container\">\n              {loading ? (\n                loader\n              ) : (\n                <>\n                  {recipeSearchResults.length > 0 && (\n                    <React.Fragment>\n                      {/* <hr /> */}\n                      <br />\n                      <button\n                        className=\"btn btn-clear-results\"\n                        onClick={clearSearchResults}\n                      >\n                        Clear Results\n                      </button>\n                      <br />\n                    </React.Fragment>\n                  )}\n                  {drawSearchedRecipes(\n                    recipeSearchResults,\n                    showRecipeFocus,\n                    setSelectedRecipe\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </Page>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default RecipesPage;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport Page from \"./Page\";\n// import { AccountContext } from \"../contexts/AccountContext\";\n\nconst Account = () => {\n  const { signOut, currentUser } = useContext(AuthContext);\n\n  const accountFields = [\n    {\n      name: \"displayName\",\n      label: \"Display Name\",\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n    },\n  ];\n\n  const renderAccountFields = (\n    i_accountFields,\n    fromCurrentUser = false,\n    input = false\n  ) => {\n    let accountFieldToRender = [];\n    let value = \"\";\n\n    i_accountFields.forEach((field) => {\n      if (fromCurrentUser) {\n        value = (\n          <h3 className=\"account-field-value\">{currentUser[field.name]}</h3>\n        );\n      } else if (input) {\n        value = (\n          <input\n            type=\"text\"\n            // onChange={handlePasswordChange}\n            name={field.name}\n          ></input>\n        );\n      } else {\n        value = <h3 className=\"account-field-value\">{field.name}</h3>;\n      }\n\n      accountFieldToRender.push(\n        <div className=\"account-field\" key={field.name}>\n          <h4 className=\"account-field-header\">{field.label}</h4>\n          {value}\n          <br />\n        </div>\n      );\n    });\n\n    return accountFieldToRender;\n  };\n\n  const onUserSignOutClick = (event) => {\n    const isSure = window.confirm(\"Are you sure you want to sign out?\");\n\n    if (isSure) {\n      signOut();\n    }\n  };\n\n  return (\n    <Page title=\"Account\">\n      {currentUser && renderAccountFields(accountFields, true)}\n      <button className=\"btn btn-sign-out\" onClick={onUserSignOutClick}>\n        Sign out\n      </button>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { AppContext } from \"../contexts/AppContext\";\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => {\n  const { validateSignIn } = useContext(AuthContext);\n  const { mainUserRoute } = useContext(AppContext);\n\n  const loggedIn = validateSignIn();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loggedIn ? <Redirect to={mainUserRoute} /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default AuthRoute;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { RecipesContext } from \"../contexts/RecipesContext\";\nimport Page from \"./Page\";\nimport RecipeFocus from \"../components/recipes/RecipeFocus\";\nimport { loader } from \"../util/uiUtils\";\n\nconst UserPage = () => {\n  const { currentUser } = useContext(AuthContext);\n  const { drawSearchedRecipes } = useContext(RecipesContext);\n  const {\n    profileFields,\n    selectProfileField,\n    savedRecipes,\n    showRecipeFocus,\n    hideRecipeFocus,\n    recipeFocusVisible,\n    selectedRecipe,\n    setSelectedRecipe,\n    loading,\n  } = useContext(UserContext);\n\n  // const [savedRecipeCards, setSavedRecipeCards] = useState([]);\n\n  const displayName = currentUser ? currentUser.displayName : \"\";\n  const photoURL = currentUser ? currentUser.photoURL : \"\";\n\n  const populateProfileFields = () => {\n    let profileFieldElements = [];\n\n    profileFields.forEach((field) => {\n      let value = \"\";\n\n      switch (typeof field.value) {\n        case \"Array\": {\n          value = field.value.length;\n          break;\n        }\n        case \"object\": {\n          value = Object.keys(field.value).length;\n          break;\n        }\n        default: {\n          value = field.value;\n        }\n      }\n\n      profileFieldElements.push(\n        <li\n          className={`profile-field ${\n            field.active ? \"active-profile-field\" : \"\"\n          }`}\n          onClick={selectProfileField}\n          key={field.name}\n          name={field.name}\n        >\n          <p className=\"profile-field-value\">{value}</p>\n          <br />\n          <p className=\"profile-field-name\">{field.name}</p>\n        </li>\n      );\n    });\n\n    return <ul className=\"profile-fields\">{profileFieldElements}</ul>;\n  };\n\n  const savedRecipesContent = () => {\n    let content = \"\";\n\n    content = drawSearchedRecipes(\n      savedRecipes,\n      showRecipeFocus,\n      setSelectedRecipe,\n      \"UserPage\"\n    );\n    return <React.Fragment>{content}</React.Fragment>;\n  };\n\n  const renderProfileContent = () => {\n    let activeField = \"\";\n\n    for (let i = 0; i < profileFields.length; i++) {\n      if (profileFields[i].active) {\n        activeField = profileFields[i].name;\n        break;\n      }\n    }\n\n    let content = \"\";\n\n    switch (activeField) {\n      case \"Saved Recipes\": {\n        content = savedRecipesContent();\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    return <div className=\"profile-content\">{content}</div>;\n  };\n\n  return (\n    <Page>\n      {recipeFocusVisible ? (\n        <RecipeFocus recipe={selectedRecipe} hideHandler={hideRecipeFocus} />\n      ) : (\n        <React.Fragment>\n          {/* <img\n            src={photoURL}\n            alt=\"profile pic\"\n            width=\"125px\"\n            className=\"profile-pic\"\n          />\n          <br />\n          <h2>{`${displayName}`}</h2> */}\n          {loading ? (\n            loader\n          ) : (\n            <React.Fragment>\n              <img\n                src={photoURL}\n                alt=\"profile pic\"\n                width=\"125px\"\n                className=\"profile-pic\"\n              />\n              <br />\n              <h2>{`${displayName}`}</h2>\n              <div className=\"user-profile-bar\">{populateProfileFields()}</div>\n              {renderProfileContent()}\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      )}\n    </Page>\n  );\n};\n\nexport default UserPage;\n","import React, { Component } from \"react\";\nimport HomePage from \"../pages/HomePage\";\nimport SignInPage from \"../pages/SignInPage\";\nimport RecipesPage from \"../pages/RecipesPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport AuthRoute from \"../components/AuthRoute\";\nimport UserPage from \"../pages/UserPage\";\nimport PrivateRoute from \"../components/PrivateRoute\";\n\nexport const AppContext = React.createContext();\n\nclass AppContextProvider extends Component {\n  state = {\n    homePages: [\n      // {\n      //   name: \"Home\",\n      //   component: HomePage,\n      //   type: \"auth\",\n      // },\n      {\n        name: \"Sign In\",\n        component: SignInPage,\n        type: \"auth\",\n      },\n    ],\n    userPages: [\n      {\n        name: \"My CookCycle\",\n        component: UserPage,\n        type: \"private\",\n      },\n      {\n        name: \"Recipes\",\n        component: RecipesPage,\n        type: \"private\",\n      },\n      {\n        name: \"Account\",\n        component: AccountPage,\n        type: \"private\",\n      },\n    ],\n    navbarTypes: [\"homePage\", \"userPage\"],\n    mainUserRoute: \"/\",\n  };\n\n  UNSAFE_componentWillMount() {\n    const { homePages, userPages } = this.state;\n\n    homePages.forEach((page) => {\n      page.route = this.createRouteFromPageName(page.name);\n    });\n    userPages.forEach((page) => {\n      page.route = this.createRouteFromPageName(page.name);\n    });\n\n    this.setState({\n      homePages,\n      userPages,\n      mainUserRoute: userPages[0].route,\n    });\n  }\n\n  createRouteFromPageName = (pageName) => {\n    if (pageName === \"Home\") {\n      return \"/\";\n    } else {\n      return `/${pageName.replace(/\\s+/g, \"-\").toLowerCase()}`;\n    }\n  };\n\n  // populateRoutes = (navbarType) => {\n  populateRoutes = () => {\n    // const stateProperty = `${navbarType}s`;\n    // const navbarPages = this.state[stateProperty];\n\n    let routes = [];\n\n    const addRoutesToArray = (pages) => {\n      pages.forEach((page, index) => {\n        const routePath = this.createRouteFromPageName(page.name);\n\n        if (page.type === \"auth\") {\n          routes.push(\n            <AuthRoute\n              key={page.name}\n              path={routePath}\n              component={page.component}\n            />\n          );\n        } else if (page.type === \"private\") {\n          routes.push(\n            <PrivateRoute\n              key={page.name}\n              path={routePath}\n              component={page.component}\n            />\n          );\n        }\n      });\n    };\n\n    addRoutesToArray(this.state.homePages);\n    addRoutesToArray(this.state.userPages);\n\n    return routes;\n  };\n\n  renderRouterSwitch = (type) => {\n    return (\n      <React.Fragment>\n        <AuthRoute exact path=\"/\" component={HomePage} />\n        {this.populateRoutes()}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n          ...this.state,\n          createRouteFromPageName: this.createRouteFromPageName,\n          renderRouterSwitch: this.renderRouterSwitch,\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default AppContextProvider;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../contexts/AppContext\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n  const appContext = useContext(AppContext);\n\n  const drawNavbar = () => {\n    let navbar = [];\n    const pages = appContext[`${props.type}s`];\n\n    pages.forEach((page, index) => {\n      if (page.name !== \"Home\") {\n        navbar.push(\n          <li className=\"navbar-item\" key={index}>\n            <NavLink\n              // to={appContext.createRouteFromPageName(page.name)}\n              to={page.route}\n              className={`navbar-link ${\n                page.name === \"Sign In\" && \"navbar-link-sign-in\"\n              }`}\n              activeClassName=\"navbar-link-active\"\n            >\n              <p>{page.name}</p>\n            </NavLink>\n          </li>\n        );\n      }\n    });\n    return navbar;\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"logo-container\">\n        <NavLink\n          to={props.type === \"homePage\" ? \"/\" : appContext.mainUserRoute}\n        >\n          <img\n            className=\"navbar-item navbar-logo navbar-logo-img\"\n            alt=\"CookCycle\"\n          />\n        </NavLink>\n      </div>\n      <div className=\"navbar-list-container\">\n        <ul className=\"navbar-list\">{drawNavbar()}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>Copyright &copy; 2020, CookCycle. All Rights Reserved</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"./contexts/AppContext\";\nimport { AuthContext } from \"./contexts/AuthContext\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport { Switch } from \"react-router-dom\";\n\nconst CookCycle = (props) => {\n  const { renderRouterSwitch, navbarTypes } = useContext(AppContext);\n  const { validateSignIn } = useContext(AuthContext);\n\n  const loggedIn = validateSignIn();\n\n  const navbarType = loggedIn ? navbarTypes[1] : navbarTypes[0];\n\n  return (\n    <React.Fragment>\n      <Navbar type={navbarType} />\n      <Switch>{renderRouterSwitch()}</Switch>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default CookCycle;\n","import React from \"react\";\n// import React, { useState } from \"react\";\n\nexport const AccountContext = React.createContext();\n\nconst AccountContextProvider = (props) => {\n  // const { signOut, currentUser } = useContext(AuthContext);\n  // const [changePassword, setChangePassword] = useState(false);\n  // const [newPassword, setNewPassword] = useState({\n  //   newPassword: \"\",\n  //   confirmNewPassword: \"\",\n  // });\n\n  // const handlePasswordChange = (event) => {\n  //   const { target } = event;\n\n  //   const currentNewPassword = newPassword;\n\n  //   currentNewPassword[target.getAttribute(\"name\")] = target.value;\n\n  //   setNewPassword(currentNewPassword);\n  // };\n\n  // const saveNewPassword = (event) => {\n  //   event.preventDefault();\n\n  //   const changePassword = window.confirm(\n  //     \"Are you sure you want to change your password?\"\n  //   );\n  // };\n\n  return (\n    <AccountContext.Provider\n      value={\n        {\n          // handlePasswordChange,\n          // changePassword,\n          // setChangePassword,\n          // saveNewPassword,\n        }\n      }\n    >\n      {props.children}\n    </AccountContext.Provider>\n  );\n};\n\nexport default AccountContextProvider;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppContextProvider from \"./contexts/AppContext\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\nimport ReciepsContextProvider from \"./contexts/RecipesContext\";\nimport CookCycle from \"./CookCycle\";\nimport UserContextProvider from \"./contexts/UserContext\";\nimport AccountContextProvider from \"./contexts/AccountContext\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <AppContextProvider>\n        <AuthContextProvider>\n          <UserContextProvider>\n            <AccountContextProvider>\n              <ReciepsContextProvider>\n                <React.Fragment>\n                  <CookCycle />\n                </React.Fragment>\n              </ReciepsContextProvider>\n            </AccountContextProvider>\n          </UserContextProvider>\n        </AuthContextProvider>\n      </AppContextProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}